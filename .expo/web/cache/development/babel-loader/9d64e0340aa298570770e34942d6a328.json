{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { doc, setDoc, getDoc, getDocs, updateDoc, collection, query, where, limit, onSnapshot, orderBy } from 'firebase/firestore';\nimport { auth, firestore, storage } from \"../../firebase\";\nimport { messageListener } from \"../components/ChatListener\";\nimport { LoadingScreen } from \"../screens/LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatTabScreen = function ChatTabScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var unsubscribes = useRef([]);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function _callee2() {\n    var unmounted, matchingRef, matchingSnap, matchingList, chatNameList, matchingUserRef, matchingUserSnap, userList, result;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            unmounted = false;\n            matchingRef = collection(firestore, \"matching/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getDocs(matchingRef));\n\n          case 4:\n            matchingSnap = _context2.sent;\n            matchingList = [];\n            chatNameList = [];\n            matchingSnap.docs.forEach(function (doc) {\n              matchingList.push(doc.id);\n              chatNameList.push(doc.data().chatName);\n            });\n            matchingUserRef = collection(firestore, \"users\");\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(getDocs(matchingUserRef));\n\n          case 11:\n            matchingUserSnap = _context2.sent;\n            userList = [];\n            matchingUserSnap.docs.forEach(function (doc) {\n              var i = matchingList.indexOf(doc.id);\n\n              if (i != -1) {\n                userList.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n                  chatRoom: chatNameList[i]\n                }));\n              }\n            });\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(Promise.all(userList.map(function _callee(user, index) {\n              var messageRef, q;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      messageRef = collection(firestore, \"chat/\" + user.chatRoom + \"/messages\");\n                      q = query(messageRef, orderBy(\"createdAt\", \"desc\"), limit(1));\n                      _context.t0 = unsubscribes.current;\n                      _context.next = 5;\n                      return _regeneratorRuntime.awrap(onSnapshot(q, function (snapshot) {\n                        var targets = snapshot.docs.map(function (doc) {\n                          return _objectSpread({}, doc.data());\n                        });\n\n                        if (targets.length == 0) {\n                          user.messages = [{\n                            _id: \"\",\n                            createdAt: \"\",\n                            text: \"\",\n                            user: {\n                              _id: \"\",\n                              avatar: \"\",\n                              name: \"\"\n                            }\n                          }];\n                        } else {\n                          user.messages = targets;\n                        }\n                      }));\n\n                    case 5:\n                      _context.t1 = _context.sent;\n\n                      _context.t0.push.call(_context.t0, _context.t1);\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            })));\n\n          case 16:\n            result = _context2.sent;\n\n            if (!unmounted) {\n              setUsers(userList);\n              setLoading(false);\n            }\n\n            return _context2.abrupt(\"return\", function () {\n              unmounted = true;\n            });\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var clear = useCallback(function () {\n    for (var _iterator = _createForOfIteratorHelperLoose(unsubscribes.current), _step; !(_step = _iterator()).done;) {\n      var unsubscribe = _step.value;\n      unsubscribe();\n    }\n  }, []);\n  useEffect(function () {\n    return function () {\n      clear();\n    };\n  }, [clear]);\n\n  if (loading) {\n    return _jsx(LoadingScreen, {});\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      style: styles.childContainer,\n      children: users.map(function (user, index) {\n        return _jsx(ListItem, {\n          user: user,\n          lastMessage: user.messages,\n          navigation: navigation\n        }, index);\n      })\n    })\n  });\n};\n\nvar ListItem = function ListItem(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user,\n      lastMessage = _ref.lastMessage;\n  return _jsxs(TouchableOpacity, {\n    style: [styles.flexify, styles.bordered],\n    onPress: function onPress() {\n      navigation.navigate('Chatroom', _objectSpread({}, user));\n    },\n    children: [_jsxs(View, {\n      style: styles.flexify,\n      children: [user.imgURL != \"\" ? _jsx(Avatar, {\n        rounded: true,\n        source: {\n          uri: user.imgURL\n        },\n        activeOpacity: 0.7\n      }) : _jsx(Avatar, {\n        rounded: true,\n        icon: {\n          name: 'user',\n          color: 'white',\n          type: 'font-awesome'\n        },\n        containerStyle: {\n          backgroundColor: \"gray\"\n        },\n        activeOpacity: 0.7\n      }), _jsxs(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: [_jsx(Text, {\n          h4: true,\n          style: {\n            fontWeight: \"600\"\n          },\n          children: user.name\n        }), _jsx(Text, {\n          children: lastMessage != undefined ? lastMessage.text : \"\"\n        })]\n      })]\n    }), _jsx(Text, {\n      children: lastMessage != undefined ? lastMessage.createdAt : \"\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  headerWrapper: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    paddingVertical: 15,\n    backgroundColor: 'white'\n  },\n  childContainer: {\n    paddingTop: StatusBar.currentHeight,\n    paddingHorizontal: 20,\n    width: '90%',\n    marginVertical: 0,\n    marginHorizontal: 'auto'\n  },\n  flexify: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  bordered: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#f5f5f5',\n    paddingVertical: 10\n  }\n});\nexport { ChatTabScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/ChatTabScreen.js"],"names":["React","useState","useEffect","useCallback","useRef","Avatar","Input","Overlay","Icon","useNavigation","MaterialIcons","doc","setDoc","getDoc","getDocs","updateDoc","collection","query","where","limit","onSnapshot","orderBy","auth","firestore","storage","messageListener","LoadingScreen","ChatTabScreen","navigation","users","setUsers","unsubscribes","loading","setLoading","unmounted","matchingRef","currentUser","uid","matchingSnap","matchingList","chatNameList","docs","forEach","push","id","data","chatName","matchingUserRef","matchingUserSnap","userList","i","indexOf","chatRoom","Promise","all","map","user","index","messageRef","q","current","snapshot","targets","length","messages","_id","createdAt","text","avatar","name","result","clear","unsubscribe","styles","container","childContainer","ListItem","lastMessage","flexify","bordered","navigate","imgURL","uri","color","type","backgroundColor","marginLeft","fontWeight","undefined","StyleSheet","create","flex","headerWrapper","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","paddingVertical","paddingTop","StatusBar","currentHeight","paddingHorizontal","marginVertical","marginHorizontal","flexDirection","alignItems","justifyContent","borderTopWidth","borderBottomWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { MaterialIcons  } from '@expo/vector-icons';\r\nimport { doc, setDoc, getDoc, getDocs, updateDoc, collection, query, where, limit, onSnapshot, orderBy } from 'firebase/firestore';\r\n\r\nimport { auth, firestore, storage } from '../../firebase';\r\nimport { messageListener } from '../components/ChatListener';\r\nimport { LoadingScreen } from '../screens/LoadingScreen'\r\n\r\n\r\nconst ChatTabScreen = () => {\r\n\r\n  const navigation = useNavigation();\r\n  const [users, setUsers] = useState([]);\r\n  const unsubscribes = useRef([]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(async () => {\r\n\r\n    let unmounted = false;\r\n\r\n    // マッチングしたユーザのuid取得\r\n    const matchingRef = collection(firestore, `matching/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n    const matchingSnap = await getDocs(matchingRef);\r\n    let matchingList = [];\r\n    let chatNameList = [];\r\n    matchingSnap.docs.forEach((doc) => {\r\n      matchingList.push(doc.id);\r\n      chatNameList.push(doc.data().chatName);\r\n    });\r\n\r\n    // とりあえずユーザ全員取得\r\n    // 後で10件ずつ検索してこれるように変更\r\n    const matchingUserRef = collection(firestore, `users`);\r\n    const matchingUserSnap = await getDocs(matchingUserRef);\r\n    let userList = [];\r\n    matchingUserSnap.docs.forEach((doc) => {\r\n\r\n      // マッチした人がいるか検索\r\n      const i = matchingList.indexOf(doc.id);\r\n      // いたらユーザリストに追加\r\n      if(i != -1){\r\n        userList.push(\r\n          {\r\n            ...doc.data(),\r\n            chatRoom : chatNameList[i],\r\n          }\r\n        );\r\n      }\r\n    });\r\n\r\n\r\n\r\n    // メッセージ取得前にsetUsersが動いてる\r\n    // メッセージ取得後setUser動かす、\r\n    // やり取りした順に並べる\r\n    \r\n    // userListに最新のメッセージ追加\r\n\r\n    const result = await Promise.all(userList.map(async (user, index) => {\r\n      const messageRef = collection(firestore, `chat/${user.chatRoom}/messages`);\r\n      const q = query(messageRef, orderBy(\"createdAt\",\"desc\"), limit(1));\r\n      unsubscribes.current.push(await onSnapshot(q, (snapshot) => {\r\n        const targets = snapshot.docs.map((doc) => {\r\n          return {...doc.data()};\r\n        });\r\n        if(targets.length == 0){\r\n          user.messages = [{\r\n            _id: \"\",\r\n            createdAt: \"\",\r\n            text: \"\",\r\n            user: {\r\n              _id: \"\",\r\n              avatar: \"\",\r\n              name: \"\",\r\n            }\r\n          }];\r\n        }else{\r\n          user.messages = targets;\r\n        }\r\n      }));\r\n    }));\r\n\r\n    if(!unmounted){\r\n      setUsers(userList);\r\n      setLoading(false);\r\n    }\r\n\r\n    return () => { unmounted = true; };\r\n  }, []);\r\n\r\n  const clear = useCallback(() => {\r\n    for(const unsubscribe of unsubscribes.current){\r\n      unsubscribe();\r\n    }\r\n  },[]);\r\n\r\n  useEffect(() => { return () => { clear(); }; }, [clear]);\r\n\r\n  if(loading){\r\n    return <LoadingScreen/>\r\n  }\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.childContainer}>\r\n        {/* <Search /> */}\r\n        \r\n        {users.map((user, index) => (\r\n          <ListItem key={index} user={user} lastMessage={user.messages} navigation={navigation} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\n\r\n// const now = Date.now();\r\n// const lastMessagesSnapshotListener = (users) => {\r\n\r\n//   users.map((user) => {\r\n//     const messageRef = collection(firestore, `chat/${user.chatRoom}/messages`);  // メッセージ登録用\r\n//   });\r\n  \r\n\r\n//   //過去メッセージの購読リスナー\r\n//   const registPastMessageListener = useCallback((time) => {\r\n//       return onSnapshot(query(messageRef, orderBy(\"createdAt\",\"desc\"), startAfter(time), limit(1)), (snapshot) => {dispMsgSnap(snapshot)});\r\n//   },[]);\r\n\r\n//   // 初回ロード\r\n//   const initRead = useCallback(() => {\r\n//     // 未来のメッセージを購読する\r\n//     // unsubscribes.current.push(registLatestMessageListener());\r\n//     // 現時刻よりも古いデータを一定数、購読する\r\n//     unsubscribes.current.push(registPastMessageListener(now));\r\n//   },[registPastMessageListener]);\r\n\r\n//   return { messages, initRead };\r\n// };\r\n\r\n// const Search = () => (\r\n//   <View\r\n//     style={[styles.flexify, { marginHorizontal: 5, marginTop: 10 }]}\r\n//   >\r\n//     <Input\r\n//       placeholder=\"Search messages\"\r\n//       leftIcon={<Icon name=\"search\" size={24} color=\"gray\" />}\r\n//       inputContainerStyle={{ borderBottomWidth: 0 }}\r\n//       // onChangeText={}\r\n//     />\r\n\r\n//     <Icon name=\"rowing\" size={24} color=\"gray\" />\r\n//   </View>\r\n// )\r\n\r\nconst ListItem = ({ navigation, user, lastMessage }) => (\r\n  <TouchableOpacity\r\n    style={[styles.flexify, styles.bordered]}\r\n    onPress={() => {navigation.navigate('Chatroom', {...user})}}\r\n  >\r\n    <View style={styles.flexify}>\r\n      {user.imgURL != \"\" \r\n        ? <Avatar rounded source={{uri: user.imgURL}} activeOpacity={0.7} />\r\n        : <Avatar rounded icon={{name: 'user', color: 'white', type: 'font-awesome'}} containerStyle={{backgroundColor: \"gray\"}} activeOpacity={0.7} />\r\n      }\r\n      <View style={{ marginLeft: 10 }}>\r\n        <Text h4 style={{ fontWeight: \"600\" }}>\r\n          {user.name}\r\n        </Text>\r\n    <Text>{lastMessage != undefined ? lastMessage.text : \"\"}</Text>\r\n      </View>\r\n    </View>\r\n\r\n    <Text>{lastMessage != undefined ? lastMessage.createdAt : \"\"}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5'\r\n  },\r\n  headerWrapper: {\r\n    shadowColor: '#171717',\r\n    shadowOffset:{\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 3,\r\n    paddingVertical: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n  childContainer: {\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingHorizontal: 20,\r\n    width: '90%',\r\n    marginVertical: 0,\r\n    marginHorizontal: 'auto',\r\n  },\r\n  flexify: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  bordered: {\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f5f5f5',\r\n    paddingVertical: 10,\r\n  },\r\n})\r\n\r\nexport { ChatTabScreen };"]},"metadata":{},"sourceType":"module"}