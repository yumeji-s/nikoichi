{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport { images } from \"../../assets/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatTabScreen = function ChatTabScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    return getChatList();\n  }, []);\n\n  var getChatList = function getChatList() {\n    var userList = [{\n      uid: 1,\n      name: \"浜辺　美波\",\n      avatar: images.minami\n    }, {\n      uid: 2,\n      name: \"今田　美桜\",\n      avatar: images.mio\n    }];\n    setUsers(userList);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.ViewContainer,\n    children: [_jsx(Header, {\n      navigation: navigation\n    }), _jsxs(ScrollView, {\n      style: styles.container,\n      children: [_jsx(Search, {}), users.map(function (user, index) {\n        return _jsx(ListItem, {\n          user: user,\n          navigation: navigation\n        }, index);\n      })]\n    })]\n  });\n};\n\nvar Header = function Header(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  var addFriend = function addFriend(email) {\n    console.log(email);\n  };\n\n  return _jsxs(View, {\n    style: styles.headerWrapper,\n    children: [_jsxs(View, {\n      style: [styles.container, {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }],\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Icon, {\n            name: \"rowing\",\n            size: 24,\n            color: \"gray\"\n          })\n        }), _jsx(Text, {\n          style: {\n            fontWeight: \"500\",\n            marginLeft: 20\n          },\n          h4: true,\n          children: \"Messaging\"\n        })]\n      }), _jsxs(View, {\n        style: styles.flexify,\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            marginRight: 40\n          },\n          children: _jsx(Icon, {\n            name: \"rowing\",\n            size: 24,\n            color: \"gray\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: toggleOverlay,\n          children: _jsx(Icon, {\n            name: \"edit\",\n            size: 24,\n            color: \"gray\"\n          })\n        })]\n      })]\n    }), _jsx(Overlay, {\n      isVisible: visible,\n      onBackdropPress: toggleOverlay,\n      children: _jsx(View, {\n        style: [styles.flexify, {\n          marginHorizontal: 5,\n          marginTop: 10\n        }],\n        children: _jsx(Input, {\n          placeholder: \"Add user by email...\",\n          leftIcon: _jsx(Icon, {\n            name: \"user\",\n            size: 18,\n            color: \"gray\"\n          }),\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\",\n          textContentType: \"emailAddress\",\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            return addFriend(email);\n          },\n          value: email\n        })\n      })\n    })]\n  });\n};\n\nvar Search = function Search() {\n  return _jsxs(View, {\n    style: [styles.flexify, {\n      marginHorizontal: 5,\n      marginTop: 10\n    }],\n    children: [_jsx(Input, {\n      placeholder: \"Search messages\",\n      leftIcon: _jsx(Icon, {\n        name: \"search\",\n        size: 24,\n        color: \"gray\"\n      }),\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      }\n    }), _jsx(Icon, {\n      name: \"rowing\",\n      size: 24,\n      color: \"gray\"\n    })]\n  });\n};\n\nvar ListItem = function ListItem(_ref2) {\n  var navigation = _ref2.navigation,\n      user = _ref2.user;\n  return _jsx(TouchableOpacity, {\n    style: [styles.flexify, styles.bordered],\n    onPress: function onPress() {\n      return navigation.navigate('ChatRoomScreen', {\n        id: user.uid,\n        name: user.name,\n        avatar: user.avatar\n      });\n    },\n    children: _jsxs(View, {\n      style: styles.flexify,\n      children: [_jsx(Avatar, {\n        rounded: true,\n        source: {\n          uri: \"../../assets/minami.jpg\"\n        }\n      }), _jsx(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: _jsx(Text, {\n          h4: true,\n          style: {\n            fontWeight: \"600\"\n          },\n          children: user.name\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  viewContainer: {\n    flex: 1\n  },\n  headerWrapper: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    paddingVertical: 15,\n    backgroundColor: 'white'\n  },\n  container: {\n    paddingHorizontal: 30,\n    width: '75%',\n    marginVertical: 0,\n    marginHorizontal: 'auto'\n  },\n  flexify: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  bordered: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#f5f5f5',\n    paddingVertical: 10\n  }\n});\nexport { ChatTabScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/ChatTabScreen.js"],"names":["React","useState","useEffect","Avatar","Input","Overlay","Icon","useNavigation","images","ChatTabScreen","navigation","users","setUsers","getChatList","userList","uid","name","avatar","minami","mio","styles","ViewContainer","container","map","user","index","Header","visible","setVisible","email","setEmail","toggleOverlay","addFriend","console","log","headerWrapper","flexDirection","justifyContent","alignItems","goBack","fontWeight","marginLeft","flexify","marginRight","marginHorizontal","marginTop","text","Search","borderBottomWidth","ListItem","bordered","navigate","id","uri","StyleSheet","create","viewContainer","flex","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","paddingVertical","backgroundColor","paddingHorizontal","marginVertical","borderTopWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { images } from '../../assets/index';\r\n\r\nconst ChatTabScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => getChatList(), [])\r\n\r\n  const getChatList = () => {\r\n    const userList = [{\r\n      uid: 1,\r\n      name: \"浜辺　美波\",\r\n      avatar: images.minami,\r\n    },{\r\n      uid: 2,\r\n      name: \"今田　美桜\",\r\n      avatar: images.mio,\r\n    }]\r\n    setUsers(userList);\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.ViewContainer}>\r\n      <Header navigation={navigation} />\r\n      <ScrollView style={styles.container}>\r\n        <Search />\r\n        {users.map((user, index) => (\r\n          <ListItem key={index} user={user} navigation={navigation} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst Header = ({ navigation }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [email, setEmail] = useState('')\r\n\r\n  const toggleOverlay = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const addFriend = (email) => {\r\n    console.log(email)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.headerWrapper} >\r\n      <View\r\n        style={[\r\n          styles.container,\r\n          {\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          },\r\n        ]}\r\n        \r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n            <Icon name=\"rowing\" size={24} color=\"gray\" />\r\n          </TouchableOpacity>\r\n\r\n          <Text style={{ fontWeight: \"500\", marginLeft: 20 }} h4>\r\n            Messaging\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.flexify}>\r\n          <TouchableOpacity style={{ marginRight: 40 }}>\r\n            <Icon name=\"rowing\" size={24} color=\"gray\" />\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={toggleOverlay}>\r\n            <Icon name=\"edit\" size={24} color=\"gray\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\r\n        <View\r\n          style={[styles.flexify, { marginHorizontal: 5, marginTop: 10 }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Add user by email...\"\r\n            leftIcon={<Icon name=\"user\" size={18} color=\"gray\" />}\r\n            autoCapitalize=\"none\"\r\n            keyboardType=\"email-address\"\r\n            textContentType=\"emailAddress\"\r\n            onChangeText={(text) => setEmail(text)}\r\n            onSubmitEditing={() => addFriend(email)}\r\n            value={email}\r\n          />\r\n        </View>\r\n      </Overlay>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Search = () => (\r\n  <View\r\n    style={[styles.flexify, { marginHorizontal: 5, marginTop: 10 }]}\r\n  >\r\n    <Input\r\n      placeholder=\"Search messages\"\r\n      leftIcon={<Icon name=\"search\" size={24} color=\"gray\" />}\r\n      inputContainerStyle={{ borderBottomWidth: 0 }}\r\n    />\r\n\r\n    <Icon name=\"rowing\" size={24} color=\"gray\" />\r\n  </View>\r\n)\r\n\r\nconst ListItem = ({ navigation, user }) => (\r\n  <TouchableOpacity\r\n    style={[styles.flexify, styles.bordered]}\r\n    onPress={() =>\r\n      navigation.navigate('ChatRoomScreen', {\r\n        id: user.uid,\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      })\r\n    }\r\n  >\r\n    <View style={styles.flexify}>\r\n      <Avatar rounded source={{ uri: \"../../assets/minami.jpg\" }} />\r\n      <View style={{ marginLeft: 10 }}>\r\n        <Text h4 style={{ fontWeight: \"600\" }}>\r\n          {user.name}\r\n        </Text>\r\n        {/* <Text>Nice to meet you too!</Text> */}\r\n      </View>\r\n    </View>\r\n\r\n    {/* <Text>Nov 12</Text> */}\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  viewContainer: {\r\n    flex: 1,\r\n  },\r\n  headerWrapper: {\r\n    shadowColor: '#171717',\r\n    shadowOffset:{\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 3,\r\n    paddingVertical: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n  container: {\r\n    paddingHorizontal: 30,\r\n    width: '75%',\r\n    marginVertical: 0,\r\n    marginHorizontal: 'auto',\r\n  },\r\n  flexify: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  bordered: {\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f5f5f5',\r\n    paddingVertical: 10,\r\n  },\r\n})\r\n\r\nexport { ChatTabScreen };"]},"metadata":{},"sourceType":"module"}