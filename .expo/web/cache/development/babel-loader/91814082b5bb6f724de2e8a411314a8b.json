{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { useNavigation } from '@react-navigation/native';\nimport { auth, firestore } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var navigation = useNavigation();\n\n  var handleRegister = function handleRegister() {\n    var user, requestRef, userRef;\n    return _regeneratorRuntime.async(function handleRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password));\n\n          case 3:\n            user = _context.sent;\n            requestRef = doc(firestore, \"request/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(setDoc(requestRef, {\n              request: false\n            }));\n\n          case 7:\n            userRef = doc(firestore, \"users/\" + auth.currentUser.uid);\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(setDoc(userRef, {\n              name: name,\n              birth: new Date(),\n              imgURL: \"\",\n              uid: auth.currentUser.uid,\n              introduction: \"\"\n            }));\n\n          case 10:\n            console.log(\"アカウント作成\");\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 20\n      },\n      children: \"\\u30E6\\u30FC\\u30B6\\u767B\\u9332\\u753B\\u9762\"\n    }), _jsx(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setName,\n        value: name,\n        placeholder: \"\\u30E6\\u30FC\\u30B6\\u540D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      })\n    }), _jsx(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      })\n    }), _jsx(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        padding: 10,\n        backgroundColor: '#88cb7f',\n        borderRadius: 10\n      },\n      onPress: handleRegister,\n      disabled: !email || !password || !name,\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"\\u767B\\u9332\\u3059\\u308B\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginTop: 10\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u306F\\u3053\\u3061\\u3089\"\n      })\n    })]\n  });\n};\n\nexport { RegisterScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/RegisterScreen.js"],"names":["React","useState","createUserWithEmailAndPassword","doc","setDoc","useNavigation","auth","firestore","RegisterScreen","name","setName","email","setEmail","password","setPassword","navigation","handleRegister","user","requestRef","currentUser","uid","request","userRef","birth","Date","imgURL","introduction","console","log","message","justifyContent","alignItems","flex","fontSize","marginBottom","width","borderWidth","padding","borderColor","backgroundColor","borderRadius","color","marginTop","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Text,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n} from 'react-native';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { auth, firestore } from '../../firebase';\r\n\r\nconst RegisterScreen = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigation = useNavigation();\r\n\r\n    const handleRegister = async () => {\r\n        try {\r\n          const user = await createUserWithEmailAndPassword(auth, email, password);\r\n          // 自分がおすすめユーザに表示されないように\r\n          const requestRef = doc(firestore, `request/${auth.currentUser.uid}/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n          await setDoc(requestRef, {\r\n            request : false,\r\n          });\r\n\r\n          const userRef = doc(firestore, `users/${auth.currentUser.uid}`);\r\n          await setDoc(userRef, {\r\n            name : name,\r\n            birth : new Date(),\r\n            imgURL : \"\",\r\n            uid : auth.currentUser.uid,\r\n            introduction : \"\",\r\n          });\r\n          console.log(\"アカウント作成\");\r\n        } catch (error) {\r\n          console.log(error.message);\r\n        }\r\n    };\r\n  \r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior=\"padding\"\r\n        style={{\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 20, marginBottom: 20 }}>ユーザ登録画面</Text>\r\n        <View style={{ marginBottom: 20 }}>\r\n          <TextInput\r\n            style={{\r\n              width: 250,\r\n              borderWidth: 1,\r\n              padding: 5,\r\n              borderColor: 'gray',\r\n            }}\r\n            onChangeText={setName}\r\n            value={name}\r\n            placeholder=\"ユーザ名を入力してください\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 20 }}>\r\n          <TextInput\r\n            style={{\r\n              width: 250,\r\n              borderWidth: 1,\r\n              padding: 5,\r\n              borderColor: 'gray',\r\n            }}\r\n            onChangeText={setEmail}\r\n            value={email}\r\n            placeholder=\"メールアドレスを入力してください\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 20 }}>\r\n          <TextInput\r\n            style={{\r\n              width: 250,\r\n              borderWidth: 1,\r\n              padding: 5,\r\n              borderColor: 'gray',\r\n            }}\r\n            onChangeText={setPassword}\r\n            value={password}\r\n            placeholder=\"パスワードを入力してください\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n          />\r\n        </View>\r\n        <TouchableOpacity\r\n          style={{\r\n            padding: 10,\r\n            backgroundColor: '#88cb7f',\r\n            borderRadius: 10,\r\n          }}\r\n          onPress={handleRegister}\r\n          disabled={!email || !password || !name}\r\n        >\r\n          <Text style={{ color: 'white' }}>登録する</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={{ marginTop: 10 }}\r\n          onPress={() => navigation.navigate('Login')}\r\n        >\r\n        <Text>ログインはこちら</Text>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  };\r\n  \r\n  export { RegisterScreen };"]},"metadata":{},"sourceType":"module"}