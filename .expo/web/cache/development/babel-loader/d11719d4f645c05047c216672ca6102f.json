{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { ChatRoomScreen } from \"../screens/ChatRoomScreen\";\nimport { ChatTabScreen } from \"../screens/ChatTabScreen\";\nimport { ProfileScreen } from \"../screens/ProfileScreen\";\nimport { SearchTabScreen } from \"../screens/SearchTabScreen\";\nimport { SwipeScreen } from \"../screens/SwipeScreen\";\nimport { LoginScreen } from \"../screens/LoginScreen\";\nimport { RegisterScreen } from \"../screens/RegisterScreen\";\nimport { LoadingScreen } from \"../screens/LoadingScreen\";\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar userInfo = function userInfo() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        setUser(user);\n      }\n\n      setLoading(false);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return [user == null ? false : true, loading];\n};\n\nvar Stack = createStackNavigator();\n\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    children: _jsx(Stack.Screen, {\n      name: \"Home\",\n      component: SwipeScreen,\n      options: {\n        headerTitle: 'メイン',\n        headerBackTitleVisible: false,\n        headerShown: false\n      }\n    })\n  });\n};\n\nvar ChatStackNavigator = function ChatStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Main\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Main\",\n      component: ChatTabScreen,\n      options: {\n        headerTitle: 'やりとり',\n        headerBackTitleVisible: false,\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Chatroom\",\n      component: ChatRoomScreen,\n      options: {\n        headerTitle: '',\n        headerBackTitleVisible: false,\n        headerShown: false\n      }\n    })]\n  });\n};\n\nvar SearchStackNavigator = function SearchStackNavigator() {\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"Main\",\n    children: _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: SearchTabScreen,\n      options: {\n        headerBackTitleVisible: false,\n        headerShown: false\n      }\n    })\n  });\n};\n\nvar ProfileNavigator = function ProfileNavigator() {\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"Main\",\n    children: _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: ProfileScreen,\n      options: {\n        headerTitle: 'プロフィール',\n        headerBackTitleVisible: false,\n        headerTitleAlign: 'center'\n      }\n    })\n  });\n};\n\nvar ParentTab = createBottomTabNavigator();\n\nvar TabNavigator = function TabNavigator() {\n  var _userInfo = userInfo(),\n      _userInfo2 = _slicedToArray(_userInfo, 2),\n      user = _userInfo2[0],\n      loading = _userInfo2[1];\n\n  if (loading) {\n    return _jsx(LoadingScreen, {});\n  }\n\n  if (!user) {\n    return _jsxs(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    });\n  }\n\n  return _jsxs(ParentTab.Navigator, {\n    initialRouteName: \"HomeTab\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          switch (route.name) {\n            case 'HomeTab':\n              return _jsx(Ionicons, {\n                name: \"home\",\n                size: 24\n              });\n\n            case 'SearchTab':\n              return _jsx(Ionicons, {\n                name: \"ios-compass-outline\",\n                size: 24\n              });\n\n            case 'ChatTab':\n              return _jsx(Ionicons, {\n                name: \"chatbubble-ellipses-outline\",\n                size: 24\n              });\n\n            case 'ProfTab':\n              return _jsx(Ionicons, {\n                name: \"person-circle-outline\",\n                size: 24\n              });\n          }\n        },\n        \"headerShown\": false,\n        \"tabBarShowLabel\": false,\n        \"tabBarStyle\": [{\n          \"display\": \"flex\"\n        }, null]\n      };\n    },\n    children: [_jsx(ParentTab.Screen, {\n      name: \"HomeTab\",\n      component: HomeStackNavigator\n    }), _jsx(ParentTab.Screen, {\n      name: \"SearchTab\",\n      component: SearchStackNavigator\n    }), _jsx(ParentTab.Screen, {\n      name: \"ChatTab\",\n      component: ChatStackNavigator\n    }), _jsx(ParentTab.Screen, {\n      name: \"ProfTab\",\n      component: ProfileNavigator\n    })]\n  });\n};\n\nexport { TabNavigator };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/navigators/TabNavigator.js"],"names":["React","useEffect","useState","Ionicons","createBottomTabNavigator","createStackNavigator","onAuthStateChanged","ChatRoomScreen","ChatTabScreen","ProfileScreen","SearchTabScreen","SwipeScreen","LoginScreen","RegisterScreen","LoadingScreen","auth","userInfo","user","setUser","loading","setLoading","error","setError","unsubscribe","Stack","HomeStackNavigator","headerTitle","headerBackTitleVisible","headerShown","ChatStackNavigator","headerTitleAlign","SearchStackNavigator","ProfileNavigator","ParentTab","TabNavigator","route","tabBarIcon","focused","color","size","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,SAASC,cAAT;AACA,SAASC,aAAT;AACA,SAASC,aAAT;AACA,SAASC,eAAT;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,cAAT;AACA,SAASC,aAAT;AACA,SAASC,IAAT;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,kBAAwBd,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOe,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BhB,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOiB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0BlB,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOmB,KAAP;AAAA,MAAcC,QAAd;;AAGArB,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAMsB,WAAW,GAAGjB,kBAAkB,CAACS,IAAD,EAAO,UAACE,IAAD,EAAU;AACrD,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AACDG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALqC,CAAtC;AAOA,WAAO;AAAA,aAAMG,WAAW,EAAjB;AAAA,KAAP;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAO,CAACN,IAAI,IAAI,IAAR,GAAe,KAAf,GAAuB,IAAxB,EAA8BE,OAA9B,CAAP;AACD,CAlBD;;AAoBA,IAAMK,KAAK,GAAGnB,oBAAoB,EAAlC;;AAEA,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SACzB,KAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA,cACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEd,WAFb;AAGE,MAAA,OAAO,EAAE;AACPe,QAAAA,WAAW,EAAE,KADN;AAEPC,QAAAA,sBAAsB,EAAE,KAFjB;AAGPC,QAAAA,WAAW,EAAE;AAHN;AAHX;AADF,IADyB;AAAA,CAA3B;;AAcA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SACzB,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA,eACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAErB,aAFb;AAGE,MAAA,OAAO,EAAE;AACPkB,QAAAA,WAAW,EAAE,MADN;AAEPC,QAAAA,sBAAsB,EAAE,KAFjB;AAGPG,QAAAA,gBAAgB,EAAE;AAHX;AAHX,MADF,EAWE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEvB,cAFb;AAGE,MAAA,OAAO,EAAE;AACPmB,QAAAA,WAAW,EAAE,EADN;AAEPC,QAAAA,sBAAsB,EAAE,KAFjB;AAGPC,QAAAA,WAAW,EAAE;AAHN;AAHX,MAXF;AAAA,IADyB;AAAA,CAA3B;;AAwBA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAC3B,KAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA,cACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAErB,eAFb;AAGE,MAAA,OAAO,EAAE;AACPiB,QAAAA,sBAAsB,EAAE,KADjB;AAEPC,QAAAA,WAAW,EAAE;AAFN;AAHX;AADF,IAD2B;AAAA,CAA7B;;AAaA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvB,KAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA,cACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEvB,aAFb;AAGE,MAAA,OAAO,EAAE;AACPiB,QAAAA,WAAW,EAAE,QADN;AAEPC,QAAAA,sBAAsB,EAAE,KAFjB;AAGPG,QAAAA,gBAAgB,EAAE;AAHX;AAHX;AADF,IADuB;AAAA,CAAzB;;AAqBA,IAAMG,SAAS,GAAG7B,wBAAwB,EAA1C;;AAEA,IAAM8B,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEzB,kBAAwBlB,QAAQ,EAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaE,OAAb;;AAEA,MAAGA,OAAH,EAAW;AACT,WAAO,KAAC,aAAD,KAAP;AACD;;AAED,MAAG,CAACF,IAAJ,EAAS;AACP,WACI,MAAC,KAAD,CAAO,SAAP;AAAkB,MAAA,gBAAgB,EAAC,MAAnC;AAAA,iBACE,KAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAEL,WAFb;AAGE,QAAA,OAAO,EAAE;AACPgB,UAAAA,WAAW,EAAE;AADN;AAHX,QADF,EAQE,KAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAEf,cAFb;AAGE,QAAA,OAAO,EAAE;AACPe,UAAAA,WAAW,EAAE;AADN;AAHX,QARF;AAAA,MADJ;AAkBD;;AAED,SACE,MAAC,SAAD,CAAW,SAAX;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,aAAa,EAAE;AAAA,UAAGO,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;;AACxC,kBAAOJ,KAAK,CAACK,IAAb;AACE,iBAAK,SAAL;AACE,qBAAO,KAAC,QAAD;AAAU,gBAAA,IAAI,EAAC,MAAf;AAAsB,gBAAA,IAAI,EAAE;AAA5B,gBAAP;;AACF,iBAAK,WAAL;AACE,qBAAO,KAAC,QAAD;AAAU,gBAAA,IAAI,EAAC,qBAAf;AAAqC,gBAAA,IAAI,EAAE;AAA3C,gBAAP;;AACF,iBAAK,SAAL;AACE,qBAAO,KAAC,QAAD;AAAU,gBAAA,IAAI,EAAC,6BAAf;AAA6C,gBAAA,IAAI,EAAE;AAAnD,gBAAP;;AACF,iBAAK,SAAL;AACE,qBAAO,KAAC,QAAD;AAAU,gBAAA,IAAI,EAAC,uBAAf;AAAuC,gBAAA,IAAI,EAAE;AAA7C,gBAAP;AARJ;AAUD,SAZ4B;AAa7B,uBAAe,KAbc;AAc7B,2BAAmB,KAdU;AAe7B,uBAAe,CACb;AACE,qBAAW;AADb,SADa,EAIb,IAJa;AAfc,OAAhB;AAAA,KAFjB;AAAA,eAyBE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAEf;AAA5C,MAzBF,EA0BE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,WAAvB;AAAmC,MAAA,SAAS,EAAEM;AAA9C,MA1BF,EA2BE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAEF;AAA5C,MA3BF,EA4BE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAEG;AAA5C,MA5BF;AAAA,IADF;AAgCD,CA7DD;;AA+DA,SAASE,YAAT","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Ionicons from 'react-native-vector-icons/Ionicons'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\n\r\nimport { ChatRoomScreen } from '../screens/ChatRoomScreen'\r\nimport { ChatTabScreen } from '../screens/ChatTabScreen'\r\nimport { ProfileScreen } from '../screens/ProfileScreen'\r\nimport { SearchTabScreen } from '../screens/SearchTabScreen'\r\nimport { SwipeScreen } from '../screens/SwipeScreen'\r\nimport { LoginScreen } from '../screens/LoginScreen'\r\nimport { RegisterScreen } from '../screens/RegisterScreen'\r\nimport { LoadingScreen } from '../screens/LoadingScreen'\r\nimport { auth } from '../../firebase'\r\n\r\nconst userInfo = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  // ログイン情報の取得\r\n  useEffect(() => {\r\n    // ログイン状況の監視\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user)\r\n      }\r\n      setLoading(false)\r\n    })\r\n    // 監視の解除\r\n    return () => unsubscribe()\r\n  }, []);\r\n  return [user == null ? false : true, loading]\r\n}\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nconst HomeStackNavigator = () => (\r\n  <Stack.Navigator initialRouteName=\"Home\">\r\n    <Stack.Screen\r\n      name=\"Home\"\r\n      component={SwipeScreen}\r\n      options={{\r\n        headerTitle: 'メイン',\r\n        headerBackTitleVisible: false,\r\n        headerShown: false,\r\n      }}\r\n    />\r\n  </Stack.Navigator>\r\n)\r\n\r\nconst ChatStackNavigator = () => (\r\n  <Stack.Navigator initialRouteName=\"Main\">\r\n    <Stack.Screen\r\n      name=\"Main\"\r\n      component={ChatTabScreen}\r\n      options={{\r\n        headerTitle: 'やりとり',\r\n        headerBackTitleVisible: false,\r\n        headerTitleAlign: 'center',\r\n        // headerShown: false,\r\n      }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"Chatroom\"\r\n      component={ChatRoomScreen}\r\n      options={{\r\n        headerTitle: '',\r\n        headerBackTitleVisible: false,\r\n        headerShown: false,\r\n      }}\r\n    />\r\n  </Stack.Navigator>\r\n)\r\n\r\nconst SearchStackNavigator = () => (\r\n  <Stack.Navigator initialRouteName=\"Main\">\r\n    <Stack.Screen\r\n      name=\"Main\"\r\n      component={SearchTabScreen}\r\n      options={{\r\n        headerBackTitleVisible: false,\r\n        headerShown: false,\r\n      }}\r\n    />\r\n  </Stack.Navigator>\r\n)\r\n\r\nconst ProfileNavigator = () => (\r\n  <Stack.Navigator initialRouteName=\"Main\">\r\n    <Stack.Screen\r\n      name=\"Main\"\r\n      component={ProfileScreen}\r\n      options={{\r\n        headerTitle: 'プロフィール',\r\n        headerBackTitleVisible: false,\r\n        headerTitleAlign: 'center',\r\n      }}\r\n    />\r\n  </Stack.Navigator>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 親タブ\r\nconst ParentTab = createBottomTabNavigator()\r\n\r\nconst TabNavigator = () => {\r\n\r\n  const [user, loading] = userInfo();\r\n\r\n  if(loading){\r\n    return <LoadingScreen/>\r\n  }\r\n\r\n  if(!user){\r\n    return (\r\n        <Stack.Navigator  initialRouteName=\"Main\">\r\n          <Stack.Screen \r\n            name=\"Login\" \r\n            component={LoginScreen}\r\n            options={{\r\n              headerShown: false,\r\n            }}\r\n          />\r\n          <Stack.Screen \r\n            name=\"Register\"\r\n            component={RegisterScreen}\r\n            options={{\r\n              headerShown: false,\r\n            }}\r\n          />\r\n        </Stack.Navigator>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <ParentTab.Navigator\r\n      initialRouteName=\"HomeTab\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          switch(route.name){\r\n            case 'HomeTab':\r\n              return <Ionicons name=\"home\" size={24} />\r\n            case 'SearchTab':\r\n              return <Ionicons name=\"ios-compass-outline\" size={24} />\r\n            case 'ChatTab':\r\n              return <Ionicons name=\"chatbubble-ellipses-outline\" size={24} />\r\n            case 'ProfTab':\r\n              return <Ionicons name=\"person-circle-outline\" size={24} />\r\n          }\r\n        },\r\n        \"headerShown\": false,\r\n        \"tabBarShowLabel\": false,\r\n        \"tabBarStyle\": [\r\n          {\r\n            \"display\": \"flex\"\r\n          },\r\n          null\r\n        ]\r\n      })}\r\n    >\r\n      <ParentTab.Screen name=\"HomeTab\" component={HomeStackNavigator} />\r\n      <ParentTab.Screen name=\"SearchTab\" component={SearchStackNavigator} />\r\n      <ParentTab.Screen name=\"ChatTab\" component={ChatStackNavigator} />\r\n      <ParentTab.Screen name=\"ProfTab\" component={ProfileNavigator} />\r\n    </ParentTab.Navigator>\r\n  )\r\n}\r\n\r\nexport { TabNavigator }\r\n"]},"metadata":{},"sourceType":"module"}