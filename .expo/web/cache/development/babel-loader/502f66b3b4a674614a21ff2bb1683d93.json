{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport 'dayjs/locale/ja';\nimport { images } from \"../../assets/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ChatRoomScreen = function ChatRoomScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(GiftedChat.append(previousMessages, messages), [{\n        _id: 1,\n        text: 'すぐ会いたいです!',\n        createdAt: new Date(2022, 1, 18, 9, 13),\n        user: {\n          _id: 2,\n          name: 'React Native',\n          avatar: Images.minami\n        }\n      }]);\n    });\n  }, []);\n  return _jsx(GiftedChat, {\n    messages: messages,\n    onSend: function (_onSend) {\n      function onSend(_x) {\n        return _onSend.apply(this, arguments);\n      }\n\n      onSend.toString = function () {\n        return _onSend.toString();\n      };\n\n      return onSend;\n    }(function (messages) {\n      return onSend(messages);\n    }),\n    user: {\n      _id: 1,\n      name: 'you',\n      avater: 'https://placeimg.com/140/140/any'\n    },\n    locale: \"ja\",\n    placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\",\n    keyboardShouldPersistTaps: \"never\",\n    timeFormat: \"H:mm\",\n    containerStyle: styles.sendArea,\n    textInputStyle: styles.sendInput,\n    alignTop: true,\n    alwaysShowSend: true,\n    infiniteScroll: true,\n    isLoadingEarlier: true,\n    listViewProps: {\n      onEndReachedThreshold: 0.4\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  sendArea: {\n    backgroundColor: 'rgba(240, 131, 0, 0.2)'\n  },\n  sendInput: {\n    borderWidth: 0.5,\n    borderColor: 'gray',\n    borderRadius: 15,\n    marginRight: 10,\n    padding: 10,\n    backgroundColor: '#FFF'\n  },\n  sendButton: {\n    backgroundColor: '#F08300',\n    color: '#FFF',\n    padding: 10,\n    borderRadius: 10,\n    margin: 5,\n    marginLeft: 0,\n    height: 34\n  }\n});\nexport { ChatRoomScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/ChatRoomScreen.js"],"names":["React","useCallback","useState","useEffect","GiftedChat","images","ChatRoomScreen","messages","setMessages","onSend","previousMessages","append","_id","text","createdAt","Date","user","name","avatar","Images","minami","avater","styles","sendArea","sendInput","onEndReachedThreshold","StyleSheet","create","backgroundColor","borderWidth","borderColor","borderRadius","marginRight","padding","sendButton","color","margin","marginLeft","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,iBAAP;AAEA,SAASC,MAAT;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEAC,EAAAA,MAAM,GAAGR,WAAW,CAAC,YAAmB;AAAA,QAAlBM,QAAkB,uEAAP,EAAO;AACpCC,IAAAA,WAAW,CAAC,UAAAE,gBAAgB;AAAA,aAAIN,UAAU,CAACO,MAAX,CAAkBP,UAAU,CAACO,MAAX,CAAkBD,gBAAlB,EAAoCH,QAApC,CAAlB,EAAgE,CAC5F;AACEK,QAAAA,GAAG,EAAE,CADP;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,EAAmB,CAAnB,EAAqB,EAArB,CAHb;AAIEC,QAAAA,IAAI,EAAE;AACJJ,UAAAA,GAAG,EAAE,CADD;AAEJK,UAAAA,IAAI,EAAE,cAFF;AAGJC,UAAAA,MAAM,EAAEC,MAAM,CAACC;AAHX;AAJR,OAD4F,CAAhE,CAAJ;AAAA,KAAjB,CAAX;AAYH,GAbmB,EAalB,EAbkB,CAApB;AAeA,SACI,KAAC,UAAD;AACI,IAAA,QAAQ,EAAEb,QADd;AAEI,IAAA,MAAM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE,UAACA,QAAD;AAAA,aAAcE,MAAM,CAACF,QAAD,CAApB;AAAA,KAAF,CAFV;AAGI,IAAA,IAAI,EAAE;AACFK,MAAAA,GAAG,EAAE,CADH;AAEFK,MAAAA,IAAI,EAAE,KAFJ;AAGFI,MAAAA,MAAM,EAAE;AAHN,KAHV;AAQI,IAAA,MAAM,EAAC,IARX;AASI,IAAA,WAAW,EAAC,kDAThB;AAUI,IAAA,yBAAyB,EAAC,OAV9B;AAWI,IAAA,UAAU,EAAC,MAXf;AAYI,IAAA,cAAc,EAAEC,MAAM,CAACC,QAZ3B;AAaI,IAAA,cAAc,EAAED,MAAM,CAACE,SAb3B;AAcI,IAAA,QAAQ,EAAE,IAdd;AAeI,IAAA,cAAc,EAAE,IAfpB;AAgBI,IAAA,cAAc,EAAE,IAhBpB;AAkBI,IAAA,gBAAgB,EAAE,IAlBtB;AAmBI,IAAA,aAAa,EAAE;AAEXC,MAAAA,qBAAqB,EAAE;AAFZ;AAnBnB,IADJ;AA0BH,CA7CD;;AAgDA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,QAAQ,EAAE;AACNK,IAAAA,eAAe,EAAE;AADX,GADmB;AAI7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,WAAW,EAAE,GADN;AAEPC,IAAAA,WAAW,EAAE,MAFN;AAGPC,IAAAA,YAAY,EAAE,EAHP;AAIPC,IAAAA,WAAW,EAAE,EAJN;AAKPC,IAAAA,OAAO,EAAE,EALF;AAMPL,IAAAA,eAAe,EAAE;AANV,GAJkB;AAY7BM,EAAAA,UAAU,EAAE;AACRN,IAAAA,eAAe,EAAE,SADT;AAERO,IAAAA,KAAK,EAAE,MAFC;AAGRF,IAAAA,OAAO,EAAE,EAHD;AAIRF,IAAAA,YAAY,EAAE,EAJN;AAKRK,IAAAA,MAAM,EAAE,CALA;AAMRC,IAAAA,UAAU,EAAE,CANJ;AAORC,IAAAA,MAAM,EAAE;AAPA;AAZiB,CAAlB,CAAf;AAuBA,SAAQhC,cAAR","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport 'dayjs/locale/ja';\r\n\r\nimport { images } from '../../assets/index';\r\n\r\nconst ChatRoomScreen = () => {\r\n    \r\n    const [messages, setMessages] = useState([]);\r\n\r\n    onSend = useCallback((messages = []) => {\r\n        setMessages(previousMessages => GiftedChat.append(GiftedChat.append(previousMessages, messages),[\r\n            {\r\n              _id: 1,\r\n              text: 'すぐ会いたいです!',\r\n              createdAt: new Date(2022,1,18,9,13),\r\n              user: {\r\n                _id: 2,\r\n                name: 'React Native',\r\n                avatar: Images.minami,\r\n              },\r\n            },\r\n          ]));\r\n    },[])\r\n\r\n    return (\r\n        <GiftedChat\r\n            messages={messages}\r\n            onSend={(messages) => onSend(messages)}\r\n            user={{\r\n                _id: 1,\r\n                name: 'you',\r\n                avater: 'https://placeimg.com/140/140/any'\r\n            }}\r\n            locale='ja'\r\n            placeholder='メッセージを入力'\r\n            keyboardShouldPersistTaps='never'\r\n            timeFormat='H:mm'\r\n            containerStyle={styles.sendArea}\r\n            textInputStyle={styles.sendInput}\r\n            alignTop={true}\r\n            alwaysShowSend={true}\r\n            infiniteScroll={true}\r\n            // loadEarlier={isLoadingEarlier}\r\n            isLoadingEarlier={true}\r\n            listViewProps={{\r\n                // onEndReached: this.onEndReached,\r\n                onEndReachedThreshold: 0.4,\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    sendArea: {\r\n        backgroundColor: 'rgba(240, 131, 0, 0.2)',\r\n    },\r\n    sendInput: {\r\n        borderWidth: 0.5,\r\n        borderColor: 'gray',\r\n        borderRadius: 15,\r\n        marginRight: 10,\r\n        padding: 10,\r\n        backgroundColor: '#FFF',\r\n    },\r\n    sendButton: {\r\n        backgroundColor: '#F08300',\r\n        color: '#FFF',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        margin: 5,\r\n        marginLeft: 0,\r\n        height: 34,\r\n    }\r\n});\r\n\r\nexport {ChatRoomScreen};"]},"metadata":{},"sourceType":"module"}