{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Avatar } from 'react-native-elements';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { useNavigation } from '@react-navigation/native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { auth, firestore } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checkPassword = _useState8[0],\n      setCheckPassword = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var _useState9 = useState(new Date()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      birth = _useState10[0],\n      setBirth = _useState10[1];\n\n  var _useState11 = useState('誕生日を設定してください'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      text = _useState12[0],\n      setText = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      show = _useState14[0],\n      setShow = _useState14[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || birth;\n    setShow(Platform.OS === 'ios');\n    setBirth(currentDate);\n    setText(currentDate.getFullYear() + \"\\u5E74\" + (currentDate.getMonth() + 1) + \"\\u6708\" + currentDate.getDate() + \"\\u65E5\");\n  };\n\n  var showDatepicker = function showDatepicker() {\n    setShow(true);\n  };\n\n  var handleRegister = function handleRegister() {\n    var age, user, requestRef, userRef;\n    return _regeneratorRuntime.async(function handleRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(password !== checkPassword)) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"同じパスワードを入力してください\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            age = getUserAge(birth);\n\n            if (!(age < 18)) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"18歳未満の方はご利用いただけません。\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.prev = 7;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password));\n\n          case 10:\n            user = _context.sent;\n            requestRef = doc(firestore, \"request/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(setDoc(requestRef, {\n              request: false\n            }));\n\n          case 14:\n            userRef = doc(firestore, \"users/\" + auth.currentUser.uid);\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(setDoc(userRef, {\n              name: name,\n              birth: birth,\n              age: age,\n              imgURL: \"\",\n              uid: auth.currentUser.uid,\n              introduction: \"\"\n            }));\n\n          case 17:\n            console.log(\"アカウント作成\");\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](7);\n            console.log(_context.t0.message);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[7, 20]], Promise);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 20\n      },\n      children: \"\\u30E6\\u30FC\\u30B6\\u767B\\u9332\\u753B\\u9762\"\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: [_jsx(Text, {\n        children: \"\\u30CB\\u30C3\\u30AF\\u30CD\\u30FC\\u30E0\"\n      }), _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setName,\n        value: name,\n        placeholder: \"\\u30E6\\u30FC\\u30B6\\u540D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 20,\n        width: 250\n      },\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"\\u8A95\\u751F\\u65E5\"\n        }), _jsx(Text, {\n          onPress: showDatepicker,\n          style: {\n            backgroundColor: '#dcdcdc',\n            borderColor: '#808080'\n          },\n          children: text\n        })]\n      }), show && _jsx(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        value: birth,\n        mode: \"date\",\n        display: \"default\",\n        onChange: onChange\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: [_jsx(Text, {\n        children: \"\\u30E1\\u30FC\\u30EB\"\n      }), _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: [_jsx(Text, {\n        children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n      }), _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\"\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: [_jsx(Text, {\n        children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u78BA\\u8A8D\"\n      }), _jsx(TextInput, {\n        style: {\n          width: 250,\n          borderWidth: 1,\n          padding: 5,\n          borderColor: 'gray'\n        },\n        onChangeText: setCheckPassword,\n        value: checkPassword,\n        placeholder: \"\\u518D\\u5EA6\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\"\n      })]\n    }), _jsx(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: \"\\u203B\\u5168\\u3066\\u306E\\u9805\\u76EE\\u3092\\u8A2D\\u5B9A\\u3057\\u306A\\u3044\\u3068\\u767B\\u9332\\u51FA\\u6765\\u307E\\u305B\\u3093\\u3002\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        padding: 10,\n        backgroundColor: '#88cb7f',\n        borderRadius: 10\n      },\n      onPress: handleRegister,\n      disabled: !email || !password || !name || !checkPassword,\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"\\u767B\\u9332\\u3059\\u308B\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginTop: 10\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u306F\\u3053\\u3061\\u3089\"\n      })\n    })]\n  });\n};\n\nvar getUserAge = function getUserAge(birth) {\n  var todayDate = new Date();\n  var userAge = todayDate.getFullYear() - birth.getFullYear();\n  var currentYearDate = new Date(todayDate.getFullYear(), birth.getMonth(), birth.getDate());\n\n  if (currentYearDate > todayDate) {\n    userAge - 1, _readOnlyError(\"userAge\");\n  }\n\n  return userAge;\n};\n\nexport { RegisterScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/RegisterScreen.js"],"names":["React","useState","Avatar","createUserWithEmailAndPassword","doc","setDoc","useNavigation","DateTimePicker","auth","firestore","RegisterScreen","name","setName","email","setEmail","password","setPassword","checkPassword","setCheckPassword","navigation","Date","birth","setBirth","text","setText","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","getFullYear","getMonth","getDate","showDatepicker","handleRegister","alert","age","getUserAge","user","requestRef","currentUser","uid","request","userRef","imgURL","introduction","console","log","message","justifyContent","alignItems","flex","fontSize","marginBottom","width","borderWidth","padding","borderColor","backgroundColor","color","borderRadius","marginTop","navigate","todayDate","userAge","currentYearDate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Text,\r\n  Button,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n} from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nimport { auth, firestore } from '../../firebase';\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [checkPassword, setCheckPassword] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const [birth, setBirth] = useState(new Date());\r\n  const [text, setText] = useState('誕生日を設定してください');\r\n  const [show, setShow] = useState(false);\r\n\r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || birth;\r\n    setShow(Platform.OS === 'ios');\r\n    setBirth(currentDate);\r\n    setText(`${currentDate.getFullYear()}年${currentDate.getMonth() + 1}月${currentDate.getDate()}日`);\r\n  };\r\n\r\n  const showDatepicker = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n\r\n    if(password !== checkPassword){\r\n      alert(\"同じパスワードを入力してください\");\r\n      return;\r\n    }\r\n\r\n    const age = getUserAge(birth);\r\n    if(age < 18){\r\n      alert(\"18歳未満の方はご利用いただけません。\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const user = await createUserWithEmailAndPassword(auth, email, password);\r\n      // 自分がおすすめユーザに表示されないように\r\n      const requestRef = doc(firestore, `request/${auth.currentUser.uid}/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n      await setDoc(requestRef, {\r\n        request : false,\r\n      });\r\n\r\n      // プロフィールを登録\r\n      const userRef = doc(firestore, `users/${auth.currentUser.uid}`);\r\n      await setDoc(userRef, {\r\n        name : name,\r\n        birth : birth,\r\n        age : age,\r\n        imgURL : \"\",\r\n        uid : auth.currentUser.uid,\r\n        introduction : \"\",\r\n      });\r\n      console.log(\"アカウント作成\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior=\"padding\"\r\n      style={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <Text style={{ fontSize: 20, marginBottom: 20 }}>ユーザ登録画面</Text>\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Text>ニックネーム</Text>\r\n        <TextInput\r\n          style={{\r\n            width: 250,\r\n            borderWidth: 1,\r\n            padding: 5,\r\n            borderColor: 'gray',\r\n          }}\r\n          onChangeText={setName}\r\n          value={name}\r\n          placeholder=\"ユーザ名を入力してください\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n      <View style={{ marginBottom: 20, width: 250 }}>\r\n        <View>\r\n          <Text>誕生日</Text>\r\n          <Text onPress={showDatepicker} style={{backgroundColor: '#dcdcdc', borderColor: '#808080'}}>{text}</Text>\r\n        </View>\r\n        {show && (\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={birth}\r\n            mode=\"date\"\r\n            display=\"default\"\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n      </View>\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Text>メール</Text>\r\n        <TextInput\r\n          style={{\r\n            width: 250,\r\n            borderWidth: 1,\r\n            padding: 5,\r\n            borderColor: 'gray',\r\n          }}\r\n          onChangeText={setEmail}\r\n          value={email}\r\n          placeholder=\"メールアドレスを入力してください\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Text>パスワード</Text>\r\n        <TextInput\r\n          style={{\r\n            width: 250,\r\n            borderWidth: 1,\r\n            padding: 5,\r\n            borderColor: 'gray',\r\n          }}\r\n          onChangeText={setPassword}\r\n          value={password}\r\n          placeholder=\"パスワードを入力してください\"\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n        />\r\n      </View>\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Text>パスワードの確認</Text>\r\n        <TextInput\r\n          style={{\r\n            width: 250,\r\n            borderWidth: 1,\r\n            padding: 5,\r\n            borderColor: 'gray',\r\n          }}\r\n          onChangeText={setCheckPassword}\r\n          value={checkPassword}\r\n          placeholder=\"再度パスワードを入力してください\"\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n        />\r\n      </View>\r\n      <View style={{ marginBottom: 20 }}>\r\n        <Text style={{color: 'red'}}>※全ての項目を設定しないと登録出来ません。</Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={{\r\n          padding: 10,\r\n          backgroundColor: '#88cb7f',\r\n          borderRadius: 10,\r\n        }}\r\n        onPress={handleRegister}\r\n        disabled={!email || !password || !name || !checkPassword}\r\n      >\r\n        <Text style={{ color: 'white' }}>登録する</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={{ marginTop: 10 }}\r\n        onPress={() => navigation.navigate('Login')}\r\n      >\r\n      <Text>ログインはこちら</Text>\r\n      </TouchableOpacity>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n\r\n  const getUserAge = (birth) => {\r\n    //今日の日付を取得する\r\n    const todayDate = new Date();\r\n  \r\n    //誕生日を計算する\r\n    const userAge = todayDate.getFullYear() - birth.getFullYear();\r\n  \r\n    //誕生日が当年込みの計算のため、もし今年の誕生日を迎えていない場合は1歳年齢を減らす\r\n    const currentYearDate = new Date(todayDate.getFullYear(), birth.getMonth(), birth.getDate());\r\n    if(currentYearDate > todayDate) {\r\n      userAge = ( userAge - 1 );\r\n    }\r\n    return userAge;\r\n  }\r\n  \r\n  export { RegisterScreen };"]},"metadata":{},"sourceType":"module"}