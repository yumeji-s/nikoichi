{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Card, Button } from 'react-native-elements';\nimport { doc, setDoc, getDoc, getDocs, updateDoc, collection, query, where, limit } from 'firebase/firestore';\nimport { auth, firestore, storage } from \"../../firebase\";\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\nvar SWIPE_OUT_DURATION = 250;\nvar IMAGE_HEIGHT = SCREEN_HEIGHT / 2;\n\nvar Deck = function Deck(_ref) {\n  var data = _ref.data;\n  UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  LayoutAnimation.spring();\n  var position = useRef(new Animated.ValueXY()).current;\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(event, gesture) {\n      position.setValue({\n        x: gesture.dx,\n        y: gesture.dy\n      });\n    },\n    onPanResponderRelease: function onPanResponderRelease(event, gesture) {\n      if (gesture.dx > SWIPE_THRESHOLD) {\n        forceSwipe('right');\n      } else if (gesture.dx < -SWIPE_THRESHOLD) {\n        forceSwipe('left');\n      } else {\n        resetPosition();\n      }\n    }\n  })).current;\n\n  var forceSwipe = function forceSwipe(direction) {\n    var x = direction === 'right' ? SCREEN_WIDTH : -SCREEN_WIDTH;\n    Animated.timing(position, {\n      toValue: {\n        x: x,\n        y: 0\n      },\n      duration: SWIPE_OUT_DURATION,\n      useNativeDriver: false\n    }).start(function () {\n      return onSwipeComplete(direction);\n    });\n  };\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      swipeDirection = _useState4[0],\n      setSwipeDirection = _useState4[1];\n\n  useEffect(function () {\n    var partner = data[index - 1];\n\n    if (swipeDirection === 'right') {\n      onSwipeRight(partner);\n    } else if (swipeDirection === 'left') {\n      onSwipeLeft(partner);\n    }\n  }, [index]);\n\n  var onSwipeComplete = function onSwipeComplete(direction) {\n    position.setValue({\n      x: 0,\n      y: 0\n    });\n    setSwipeDirection(direction);\n    setIndex(function (prevIndex) {\n      return prevIndex + 1;\n    });\n  };\n\n  var resetPosition = function resetPosition() {\n    Animated.spring(position, {\n      toValue: {\n        x: 0,\n        y: 0\n      },\n      useNativeDriver: false\n    }).start();\n  };\n\n  var rotate = position.x.interpolate({\n    inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\n    outputRange: ['-120deg', '0deg', '120deg']\n  });\n\n  var onSwipeRight = function onSwipeRight(partner) {\n    var matchingRef, partnerRef, requestRef;\n    return _regeneratorRuntime.async(function onSwipeRight$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            matchingRef = collection(firestore, \"matching/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(setDoc(doc(matchingRef, partner.uid), {\n              chatName: auth.currentUser.uid + partner.uid\n            }, {\n              capital: true\n            }, {\n              merge: true\n            }));\n\n          case 3:\n            partnerRef = collection(firestore, \"matching/\" + partner.uid + \"/\" + partner.uid);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(setDoc(doc(partnerRef, auth.currentUser.uid), {\n              chatName: auth.currentUser.uid + partner.uid\n            }, {\n              capital: true\n            }, {\n              merge: true\n            }));\n\n          case 6:\n            requestRef = doc(firestore, \"request/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid + \"/\" + partner.uid);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(updateDoc(requestRef, {\n              request: false\n            }, {\n              capital: true\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSwipeLeft = function onSwipeLeft(partner) {\n    console.log(\"dislike \" + partner.uid);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [index >= data.length && _jsx(RenderNoMoreCards, {}), data.map(function (item, i) {\n      if (i < index) {\n        return null;\n      }\n\n      if (i === index) {\n        return _jsx(Animated.View, _objectSpread(_objectSpread({\n          style: [_objectSpread(_objectSpread({}, position.getLayout()), {}, {\n            transform: [{\n              rotate: rotate\n            }],\n            zIndex: 1,\n            elevation: Platform.OS === 'android' ? 50 : 0\n          }), styles.cardStyle]\n        }, panResponder.panHandlers), {}, {\n          children: _jsx(RenderCards, {\n            item: item\n          })\n        }), item.uid);\n      }\n\n      return _jsx(Animated.View, {\n        style: [styles.cardStyle, {\n          top: 10 * (i - index)\n        }],\n        children: _jsx(RenderCards, {\n          item: item\n        })\n      }, item.uid);\n    }).reverse()]\n  });\n};\n\nvar RenderCards = function RenderCards(_ref2) {\n  var item = _ref2.item;\n  return _jsxs(Card, {\n    children: [_jsx(Card.Title, {\n      style: styles.titleStyle,\n      children: item.name\n    }), _jsx(Card.Divider, {}), item.uri ? _jsx(Card.Image, {\n      source: {\n        uri: item.uri\n      },\n      style: styles.imageStyle,\n      resizeMode: \"contain\"\n    }) : _jsx(Card.Image, {\n      source: require(\"../../assets/defaultUserIcon.png\"),\n      style: styles.imageStyle,\n      resizeMode: \"stretch\"\n    }), _jsx(Card.Divider, {}), _jsx(Text, {\n      style: styles.textStyle,\n      children: item.introduction\n    }), _jsx(Button, {\n      buttonStyle: styles.buttonStyle,\n      title: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u306F\\u3053\\u3061\\u3089\",\n      onPress: function onPress() {\n        console.info(\"name: \" + item.name);\n      }\n    })]\n  }, item.uid);\n};\n\nvar RenderNoMoreCards = function RenderNoMoreCards() {\n  return _jsxs(Card, {\n    style: styles.cardStyle,\n    children: [_jsx(Card.Title, {\n      style: styles.titleStyle,\n      children: \"\\u7D42\\u4E86\"\n    }), _jsx(Card.Divider, {}), _jsx(Text, {\n      style: styles.textStyle,\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }), _jsx(Button, {\n      buttonStyle: styles.buttonStyle,\n      title: \"\\u3082\\u3046\\u4E00\\u5EA6\",\n      onPress: function onPress() {}\n    })]\n  });\n};\n\nvar FromPartnerScreen = function FromPartnerScreen() {\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function _callee() {\n    var requestRef, q, requestUsersSnap, uids, usersRef, userQuery, usersSnap, users;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestRef = collection(firestore, \"request/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            q = query(requestRef, where(\"request\", \"==\", true), limit(10));\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getDocs(q));\n\n          case 4:\n            requestUsersSnap = _context2.sent;\n            uids = [];\n            requestUsersSnap.docs.forEach(function (doc) {\n              uids.push(doc.id);\n            });\n\n            if (uids.length == 0) {\n              uids.push(\"0\");\n            }\n\n            usersRef = collection(firestore, \"users/\");\n            userQuery = query(usersRef, where(\"uid\", 'in', uids));\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(getDocs(userQuery));\n\n          case 12:\n            usersSnap = _context2.sent;\n            users = [];\n            usersSnap.docs.forEach(function (doc) {\n              users.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n                uri: doc.data().imgURL == '' ? null : doc.data().imgURL\n              }));\n            });\n            setData(users);\n            setLoading(false);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  if (loading) {\n    return _jsx(LoadingScreen, {});\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Deck, {\n      data: data\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 40,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  cardStyle: {\n    marginTop: \"10%\",\n    position: 'absolute',\n    width: SCREEN_WIDTH,\n    borderRadius: 50\n  },\n  imageStyle: {\n    height: IMAGE_HEIGHT,\n    width: SCREEN_WIDTH\n  },\n  titleStyle: {\n    fontSize: 18\n  },\n  textStyle: {\n    marginBottom: 10,\n    fontSize: 16\n  },\n  buttonStyle: {\n    borderRadius: 50,\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0\n  }\n});\nexport { FromPartnerScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/FromPartnerScreen.js"],"names":["React","useRef","useState","useEffect","Card","Button","doc","setDoc","getDoc","getDocs","updateDoc","collection","query","where","limit","auth","firestore","storage","LoadingScreen","SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","SWIPE_THRESHOLD","SWIPE_OUT_DURATION","IMAGE_HEIGHT","Deck","data","UIManager","setLayoutAnimationEnabledExperimental","LayoutAnimation","spring","position","Animated","ValueXY","current","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gesture","setValue","x","dx","y","dy","onPanResponderRelease","forceSwipe","resetPosition","direction","timing","toValue","duration","useNativeDriver","start","onSwipeComplete","index","setIndex","swipeDirection","setSwipeDirection","partner","onSwipeRight","onSwipeLeft","prevIndex","rotate","interpolate","inputRange","outputRange","matchingRef","currentUser","uid","chatName","capital","merge","partnerRef","requestRef","request","console","log","length","map","item","i","getLayout","transform","zIndex","elevation","Platform","OS","styles","cardStyle","panHandlers","top","reverse","RenderCards","titleStyle","name","uri","imageStyle","require","textStyle","introduction","buttonStyle","info","RenderNoMoreCards","FromPartnerScreen","setData","loading","setLoading","q","requestUsersSnap","uids","docs","forEach","push","id","usersRef","userQuery","usersSnap","users","imgURL","container","StyleSheet","flex","marginTop","backgroundColor","alignItems","borderRadius","fontSize","marginBottom","marginLeft","marginRight"],"mappings":"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","sourcesContent":["//import Deck from '../components/SwipeCard';\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Animated,\r\n  PanResponder,\r\n  Dimensions,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  Platform,\r\n} from 'react-native';\r\nimport { Card, Button } from 'react-native-elements';\r\nimport { doc, setDoc, getDoc, getDocs, updateDoc, collection, query, where, limit } from 'firebase/firestore';\r\n\r\nimport { auth, firestore, storage } from '../../firebase';\r\nimport { LoadingScreen } from './LoadingScreen';\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\r\nconst SWIPE_THRESHOLD = 0.25 * SCREEN_WIDTH;\r\nconst SWIPE_OUT_DURATION = 250;\r\nconst IMAGE_HEIGHT = SCREEN_HEIGHT / 2;\r\n\r\nconst Deck = ({ data }) => {\r\n  UIManager.setLayoutAnimationEnabledExperimental &&\r\n    UIManager.setLayoutAnimationEnabledExperimental(true);\r\n  LayoutAnimation.spring();\r\n\r\n  const position = useRef(new Animated.ValueXY()).current;\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderMove: (event, gesture) => {\r\n        position.setValue({ x: gesture.dx, y: gesture.dy });\r\n      },\r\n      onPanResponderRelease: (event, gesture) => {\r\n        if (gesture.dx > SWIPE_THRESHOLD) {\r\n          forceSwipe('right');\r\n        } else if (gesture.dx < -SWIPE_THRESHOLD) {\r\n          forceSwipe('left');\r\n        } else {\r\n          resetPosition();\r\n        }\r\n      },\r\n    })\r\n  ).current;\r\n\r\n  const forceSwipe = (direction) => {\r\n    const x = direction === 'right' ? SCREEN_WIDTH : -SCREEN_WIDTH;\r\n    Animated.timing(position, {\r\n      toValue: { x, y: 0 },\r\n      duration: SWIPE_OUT_DURATION,\r\n      useNativeDriver: false,\r\n    }).start(() => onSwipeComplete(direction));\r\n  };\r\n  \r\n  const [index, setIndex] = useState(0);\r\n  const [swipeDirection, setSwipeDirection] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const partner = data[index - 1];\r\n    if(swipeDirection === 'right'){\r\n      onSwipeRight(partner);\r\n    }else if(swipeDirection === 'left'){\r\n      onSwipeLeft(partner);\r\n    }\r\n  },[index]);\r\n\r\n  const onSwipeComplete = (direction) => {\r\n    position.setValue({ x: 0, y: 0 });\r\n    setSwipeDirection(direction);\r\n    setIndex(prevIndex => prevIndex + 1);\r\n  };\r\n\r\n  const resetPosition = () => {\r\n    Animated.spring(position, {\r\n      toValue: { x: 0, y: 0 },\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  const rotate = position.x.interpolate({\r\n    inputRange: [-SCREEN_WIDTH * 1.5, 0, SCREEN_WIDTH * 1.5],\r\n    outputRange: ['-120deg', '0deg', '120deg'],\r\n  });\r\n\r\n\r\n  const onSwipeRight = async (partner) => {\r\n\r\n    // マッチング済みに追加\r\n    const matchingRef = collection(firestore, `matching/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n    await setDoc(doc(matchingRef, partner.uid), {\r\n      chatName : auth.currentUser.uid + partner.uid,\r\n    },{ capital: true },{ merge: true });\r\n    const partnerRef = collection(firestore, `matching/${partner.uid}/${partner.uid}`);\r\n    await setDoc(doc(partnerRef, auth.currentUser.uid), {\r\n      chatName : auth.currentUser.uid + partner.uid,\r\n    },{ capital: true },{ merge: true });\r\n\r\n    // リクエストをfalseに\r\n    const requestRef = doc(firestore, `request/${auth.currentUser.uid}/${auth.currentUser.uid}/${partner.uid}`);\r\n    await updateDoc(requestRef, {\r\n      request : false,\r\n    },{ capital: true });\r\n  };\r\n\r\n  const onSwipeLeft = (partner) => {\r\n    console.log(\"dislike \" + partner.uid);\r\n    // 嫌いの時\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {index >= data.length && <RenderNoMoreCards />}\r\n      {data\r\n        .map((item, i) => {\r\n          if (i < index) {\r\n            return null;\r\n          }\r\n\r\n          if (i === index) {\r\n            return (\r\n              <Animated.View\r\n                key={item.uid}\r\n                style={[\r\n                  {\r\n                    ...position.getLayout(),\r\n                    transform: [{ rotate }],\r\n                    zIndex: 1,\r\n                    elevation: (Platform.OS === 'android') ? 50 : 0\r\n                  },\r\n                  styles.cardStyle,\r\n                ]}\r\n                {...panResponder.panHandlers}\r\n              >\r\n                <RenderCards item={item} />\r\n              </Animated.View>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <Animated.View\r\n              key={item.uid}\r\n              style={[styles.cardStyle, { top: 10 * (i - index) }]}\r\n            >\r\n              <RenderCards item={item} />\r\n            </Animated.View>\r\n          );\r\n        })\r\n        .reverse()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderCards = ({ item }) => {\r\n  return (\r\n    <Card key={item.uid}>\r\n      <Card.Title style={styles.titleStyle}>{item.name}</Card.Title>\r\n      <Card.Divider />\r\n        {\r\n          item.uri ? \r\n            <Card.Image source={{ uri: item.uri }} style={styles.imageStyle} resizeMode='contain'/> :\r\n            <Card.Image source={require('../../assets/defaultUserIcon.png')} style={styles.imageStyle} resizeMode='stretch'/>\r\n        }\r\n      <Card.Divider />\r\n      <Text style={styles.textStyle}>{item.introduction}</Text>\r\n      <Button buttonStyle={styles.buttonStyle} title=\"プロフィールはこちら\" onPress={() => {console.info(`name: ${item.name}`)}} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst RenderNoMoreCards = () => {\r\n  return (\r\n    <Card style={styles.cardStyle}>\r\n      <Card.Title style={styles.titleStyle}>終了</Card.Title>\r\n      <Card.Divider />\r\n      <Text style={styles.textStyle}>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</Text>\r\n      <Button buttonStyle={styles.buttonStyle} title=\"もう一度\" onPress={() => {}}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst FromPartnerScreen = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(async () => {\r\n    // リクエストをもらった人のuidを取得\r\n    const requestRef = collection(firestore, `request/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n    const q = query(requestRef, where(`request`, \"==\", true), limit(10));\r\n    const requestUsersSnap = await getDocs(q);\r\n    let uids = [];\r\n    requestUsersSnap.docs.forEach((doc) => {\r\n      uids.push(doc.id);\r\n    });\r\n    \r\n    // リクエストがなかったらテキトーな値を入れておく\r\n    if(uids.length == 0){\r\n      uids.push(\"0\");\r\n    }\r\n\r\n    // iconが更新されるごとにアイコンを取得\r\n    const usersRef = collection(firestore, `users/`);\r\n    const userQuery = query(usersRef, where(`uid`, 'in', uids));\r\n    const usersSnap = await getDocs(userQuery);\r\n    let users = [];\r\n    usersSnap.docs.forEach((doc) => {\r\n      users.push(\r\n        {\r\n          ...doc.data(),\r\n          uri : doc.data().imgURL == '' ? null : doc.data().imgURL,\r\n        }\r\n      );\r\n    });\r\n    \r\n    setData(users);\r\n    setLoading(false);\r\n  },[]);\r\n\r\n  if(loading){\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Deck data={data} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      marginTop: 40,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    cardStyle: {\r\n      marginTop: \"10%\",\r\n      position: 'absolute',\r\n      width: SCREEN_WIDTH,\r\n      borderRadius: 50,\r\n    },\r\n    imageStyle: {\r\n      height: IMAGE_HEIGHT,\r\n      width: SCREEN_WIDTH,\r\n    },\r\n    titleStyle: {\r\n      fontSize: 18\r\n    },\r\n    textStyle: {\r\n      marginBottom: 10,\r\n      fontSize: 16\r\n    },\r\n    buttonStyle: {\r\n      borderRadius: 50,\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n      marginBottom: 0,\r\n    },\r\n});\r\n\r\n\r\nexport {FromPartnerScreen};"]},"metadata":{},"sourceType":"module"}