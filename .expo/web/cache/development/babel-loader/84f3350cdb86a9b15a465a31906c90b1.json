{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, NativeBaseProvider } from 'native-base';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var onTweet = useCallback(function (text) {\n    console.info(\"tweet: \" + text);\n  }, []);\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(View, {\n        style: styles.actionBar,\n        children: _jsx(Button, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Sub');\n          },\n          children: \"sub\\u753B\\u9762\\u3078\"\n        })\n      }), _jsx(TextInput, {\n        style: styles.input,\n        multiline: true,\n        onChangeText: function onChangeText(value) {\n          return setText(value);\n        }\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center'\n  },\n  actionBar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    padding: 12\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 120,\n    padding: 12,\n    borderRadius: 50,\n    backgroundColor: 'rgb(29, 161, 242)'\n  },\n  tweetButtonText: {\n    color: '#ffffff'\n  },\n  input: {\n    height: 400,\n    backgroundColor: '#f8f8f8',\n    padding: 12\n  }\n});\nexport { HomeScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/HomeScreen.js"],"names":["React","useState","useCallback","Button","NativeBaseProvider","useNavigation","HomeScreen","navigation","text","setText","onTweet","console","info","styles","root","actionBar","button","navigate","input","value","StyleSheet","create","flex","display","alignContent","flexDirection","justifyContent","padding","alignItems","width","borderRadius","backgroundColor","tweetButtonText","color","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;;;;AAEA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,aAA3C;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AACA,kBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,OAAO,GAAGR,WAAW,CAAC,UAACM,IAAD,EAAU;AACpCG,IAAAA,OAAO,CAACC,IAAR,aAAuBJ,IAAvB;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SACE,KAAC,kBAAD;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,MAAM,CAACC,IAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA,kBACE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAEF,MAAM,CAACG,MAAtB;AAA8B,UAAA,OAAO,EAAE;AAAA,mBAAMT,UAAU,CAACU,QAAX,CAAoB,KAApB,CAAN;AAAA,WAAvC;AAAA;AAAA;AADF,QADF,EAIE,KAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAAzB;AAAgC,QAAA,SAAS,EAAE,IAA3C;AAAiD,QAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,iBAAIV,OAAO,CAACU,KAAD,CAAX;AAAA;AAApE,QAJF;AAAA;AADF,IADF;AAUD,CAnBD;;AAqBA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,YAAY,EAAE;AAHV,GADyB;AAM/BT,EAAAA,SAAS,EAAE;AACTQ,IAAAA,OAAO,EAAE,MADA;AAETE,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,UAHP;AAITC,IAAAA,OAAO,EAAE;AAJA,GANoB;AAY/BX,EAAAA,MAAM,EAAE;AACNO,IAAAA,OAAO,EAAE,MADH;AAENG,IAAAA,cAAc,EAAE,QAFV;AAGNE,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,KAAK,EAAE,GAJD;AAKNF,IAAAA,OAAO,EAAE,EALH;AAMNG,IAAAA,YAAY,EAAE,EANR;AAONC,IAAAA,eAAe,EAAE;AAPX,GAZuB;AAqB/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AADQ,GArBc;AAwB/Bf,EAAAA,KAAK,EAAE;AACLgB,IAAAA,MAAM,EAAE,GADH;AAELH,IAAAA,eAAe,EAAE,SAFZ;AAGLJ,IAAAA,OAAO,EAAE;AAHJ;AAxBwB,CAAlB,CAAf;AA+BA,SAAQrB,UAAR","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Button, NativeBaseProvider } from 'native-base'; \r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst HomeScreen = () => {\r\n  \r\n  const navigation = useNavigation();\r\n  const [text, setText] = useState('');\r\n\r\n  const onTweet = useCallback((text) => {\r\n    console.info(`tweet: ${text}`)\r\n  }, []);\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <View style={styles.root}>\r\n        <View style={styles.actionBar}>\r\n          <Button style={styles.button} onPress={() => navigation.navigate('Sub')}>sub画面へ</Button>\r\n        </View>\r\n        <TextInput style={styles.input} multiline={true} onChangeText={value => setText(value)}/> \r\n      </View>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n  },\r\n  actionBar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: 12,\r\n  },\r\n  button: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 120,\r\n    padding: 12,\r\n    borderRadius: 50,\r\n    backgroundColor: 'rgb(29, 161, 242)',\r\n  },\r\n  tweetButtonText: {\r\n    color: '#ffffff',\r\n  },\r\n  input: {\r\n    height: 400,\r\n    backgroundColor: '#f8f8f8',\r\n    padding: 12,\r\n  },\r\n})\r\n\r\nexport {HomeScreen};\r\n"]},"metadata":{},"sourceType":"module"}