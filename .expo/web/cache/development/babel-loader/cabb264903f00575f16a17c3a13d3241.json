{"ast":null,"code":"import React from 'react';\nexport default (function (children, startingIndex) {\n  var counter = startingIndex ? startingIndex - 1 : -1;\n  var indexedChildren = React.Children.map(children, function (child) {\n    counter++;\n    return React.cloneElement(child, {\n      index: counter\n    }, child.props.children);\n  });\n  return indexedChildren;\n});","map":{"version":3,"sources":["getIndexedChildren.ts"],"names":["counter","startingIndex","indexedChildren","child","index"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;AAEA,gBAAe,UAAA,QAAA,EAAA,aAAA,EAAuD;AACpE,MAAIA,OAAO,GAAGC,aAAa,GAAGA,aAAa,GAAhB,CAAA,GAAuB,CAAlD,CAAA;AACA,MAAMC,eAAe,GAAG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA8BC,UAAAA,KAAD,EAAgB;AACnEH,IAAAA,OAAO;AACP,WAAO,KAAK,CAAL,YAAA,CAAA,KAAA,EAEL;AACEI,MAAAA,KAAK,EAAEJ;AADT,KAFK,EAKLG,KAAK,CAALA,KAAAA,CALF,QAAO,CAAP;AAFF,GAAwB,CAAxB;AAUA,SAAA,eAAA;AAZF,CAAA","sourcesContent":["import React from 'react';\n\nexport default (children: React.ReactNode, startingIndex?: number) => {\n  let counter = startingIndex ? startingIndex - 1 : -1;\n  const indexedChildren = React.Children.map(children, (child: any) => {\n    counter++;\n    return React.cloneElement(\n      child,\n      {\n        index: counter,\n      },\n      child.props.children\n    );\n  });\n  return indexedChildren;\n};\n"]},"metadata":{},"sourceType":"module"}