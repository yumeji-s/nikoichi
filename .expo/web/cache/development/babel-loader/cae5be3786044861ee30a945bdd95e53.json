{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { images } from \"../../assets/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatTabScreen = function ChatTabScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    return getChatList();\n  }, []);\n\n  var getChatList = function getChatList() {\n    var userList = [{\n      uid: 1,\n      name: \"浜辺　美波\",\n      avatar: images.minami\n    }, {\n      uid: 2,\n      name: \"今田　美桜\",\n      avatar: images.mio\n    }];\n    setUsers(userList);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.childContainer,\n      children: [_jsx(Search, {}), users.map(function (user, index) {\n        return _jsx(ListItem, {\n          user: user,\n          navigation: navigation\n        }, index);\n      })]\n    })\n  });\n};\n\nvar Search = function Search() {\n  return _jsxs(View, {\n    style: [styles.flexify, {\n      marginHorizontal: 5,\n      marginTop: 10\n    }],\n    children: [_jsx(Input, {\n      placeholder: \"Search messages\",\n      leftIcon: _jsx(Icon, {\n        name: \"search\",\n        size: 24,\n        color: \"gray\"\n      }),\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      }\n    }), _jsx(Icon, {\n      name: \"rowing\",\n      size: 24,\n      color: \"gray\"\n    })]\n  });\n};\n\nvar ListItem = function ListItem(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user;\n  return _jsx(TouchableOpacity, {\n    style: [styles.flexify, styles.bordered],\n    onPress: function onPress() {\n      return navigation.navigate('Chatroom', {\n        id: user.uid,\n        name: user.name,\n        avatar: user.avatar\n      });\n    },\n    children: _jsxs(View, {\n      style: styles.flexify,\n      children: [_jsx(Avatar, {\n        rounded: true,\n        source: {\n          uri: '../../assets/minami.jpg'\n        }\n      }), _jsx(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: _jsx(Text, {\n          h4: true,\n          style: {\n            fontWeight: \"600\"\n          },\n          children: user.name\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  headerWrapper: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    paddingVertical: 15,\n    backgroundColor: 'white'\n  },\n  childContainer: {\n    paddingTop: StatusBar.currentHeight,\n    paddingHorizontal: 20,\n    width: '90%',\n    marginVertical: 0,\n    marginHorizontal: 'auto'\n  },\n  flexify: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  bordered: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#f5f5f5',\n    paddingVertical: 10\n  }\n});\nexport { ChatTabScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/ChatTabScreen.js"],"names":["React","useState","useEffect","Avatar","Input","Overlay","Icon","useNavigation","MaterialIcons","images","ChatTabScreen","navigation","users","setUsers","getChatList","userList","uid","name","avatar","minami","mio","styles","container","childContainer","map","user","index","Search","flexify","marginHorizontal","marginTop","borderBottomWidth","ListItem","bordered","navigate","id","uri","marginLeft","fontWeight","StyleSheet","create","flex","backgroundColor","headerWrapper","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","paddingVertical","paddingTop","StatusBar","currentHeight","paddingHorizontal","marginVertical","flexDirection","alignItems","justifyContent","borderTopWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { MaterialIcons  } from '@expo/vector-icons';\r\n\r\nimport { images } from '../../assets/index';\r\n\r\nconst ChatTabScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => getChatList(), [])\r\n\r\n  const getChatList = () => {\r\n    const userList = [{\r\n      uid: 1,\r\n      name: \"浜辺　美波\",\r\n      avatar: images.minami,\r\n    },{\r\n      uid: 2,\r\n      name: \"今田　美桜\",\r\n      avatar: images.mio,\r\n    }]\r\n    setUsers(userList);\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.childContainer}>\r\n        <Search />\r\n        {users.map((user, index) => (\r\n          <ListItem key={index} user={user} navigation={navigation} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst Search = () => (\r\n  <View\r\n    style={[styles.flexify, { marginHorizontal: 5, marginTop: 10 }]}\r\n  >\r\n    <Input\r\n      placeholder=\"Search messages\"\r\n      leftIcon={<Icon name=\"search\" size={24} color=\"gray\" />}\r\n      inputContainerStyle={{ borderBottomWidth: 0 }}\r\n      // onChangeText={}\r\n    />\r\n\r\n    <Icon name=\"rowing\" size={24} color=\"gray\" />\r\n  </View>\r\n)\r\n\r\nconst ListItem = ({ navigation, user }) => (\r\n  <TouchableOpacity\r\n    style={[styles.flexify, styles.bordered]}\r\n    onPress={() =>\r\n      navigation.navigate('Chatroom', {\r\n        id: user.uid,\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      })\r\n    }\r\n  >\r\n    <View style={styles.flexify}>\r\n      <Avatar rounded source={{ uri: '../../assets/minami.jpg' }} />\r\n      <View style={{ marginLeft: 10 }}>\r\n        <Text h4 style={{ fontWeight: \"600\" }}>\r\n          {user.name}\r\n        </Text>\r\n        {/* <Text>Nice to meet you too!</Text> */}\r\n      </View>\r\n    </View>\r\n\r\n    {/* <Text>Nov 12</Text> */}\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5'\r\n  },\r\n  headerWrapper: {\r\n    shadowColor: '#171717',\r\n    shadowOffset:{\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 3,\r\n    paddingVertical: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n  childContainer: {\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingHorizontal: 20,\r\n    width: '90%',\r\n    marginVertical: 0,\r\n    marginHorizontal: 'auto',\r\n  },\r\n  flexify: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  bordered: {\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f5f5f5',\r\n    paddingVertical: 10,\r\n  },\r\n})\r\n\r\nexport { ChatTabScreen };"]},"metadata":{},"sourceType":"module"}