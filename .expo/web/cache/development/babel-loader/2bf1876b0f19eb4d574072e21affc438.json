{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Avatar } from 'react-native-elements';\nimport { Button, NativeBaseProvider } from 'native-base';\nimport { useNavigation } from '@react-navigation/native';\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport { signOut } from 'firebase/auth';\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { auth, firestore, storage } from \"../../firebase\";\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      icon = _useState4[0],\n      setIcon = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      iconLocked = _useState6[0],\n      setIconLocked = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function _callee() {\n    var userRef, snapShot;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userRef = doc(firestore, \"users/\" + auth.currentUser.uid);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDoc(userRef));\n\n          case 3:\n            snapShot = _context.sent;\n\n            if (snapShot.data().imgURL != '') {\n              setIcon(snapShot.data().imgURL);\n            }\n\n            setUser({\n              name: snapShot.data().name,\n              imgURL: snapShot.data().imgURL\n            });\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var unLock = useCallback(function () {\n    return setIconLocked(false);\n  }, []);\n\n  var handleLogout = function handleLogout() {\n    signOut(auth).then(function () {\n      console.log('logout');\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n\n  var pickImage = function pickImage() {\n    var _await$Permissions$as, status, result;\n\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!iconLocked) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            if (!Constants.platform.ios) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 5:\n            _await$Permissions$as = _context2.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status !== 'granted')) {\n              _context2.next = 10;\n              break;\n            }\n\n            alert(\"利用には許可が必要です。\");\n            return _context2.abrupt(\"return\");\n\n          case 10:\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 1\n            }));\n\n          case 12:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              updateIcon(result.uri);\n            }\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateIcon = function updateIcon(url) {\n    var iconRef, localUri, localBlob, metadata;\n    return _regeneratorRuntime.async(function updateIcon$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            iconRef = ref(storage, \"images/\" + auth.currentUser.uid + \"/icon\");\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 3:\n            localUri = _context4.sent;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(localUri.blob());\n\n          case 6:\n            localBlob = _context4.sent;\n            metadata = {\n              name: 'icon'\n            };\n            uploadBytes(iconRef, localBlob, metadata).then(function _callee2(snapshot) {\n              var userIconRef, imgUrl;\n              return _regeneratorRuntime.async(function _callee2$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      userIconRef = doc(firestore, \"users/\" + auth.currentUser.uid);\n                      _context3.next = 3;\n                      return _regeneratorRuntime.awrap(getDownloadURL(ref(storage, \"images/\" + auth.currentUser.uid + \"/icon\")));\n\n                    case 3:\n                      imgUrl = _context3.sent;\n                      updateDoc(userIconRef, {\n                        imgURL: imgUrl\n                      }, {\n                        capital: true\n                      });\n                      setIcon(url);\n                      setIconLocked(true);\n                      setTimeout(unLock, 300000);\n\n                    case 8:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateProfile = function updateProfile() {\n    var userRef = doc(firestore, \"users/\" + auth.currentUser.uid);\n    updateDoc(userRef, {\n      birth: new Date()\n    }, {\n      capital: true\n    });\n    console.log(\"update\");\n  };\n\n  if (loading) {\n    return _jsx(LoadingScreen, {});\n  }\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsxs(View, {\n        style: styles.actionBar,\n        children: [_jsx(Text, {\n          children: auth.currentUser.uid\n        }), _jsx(Button, {\n          style: styles.button,\n          onPress: handleLogout,\n          children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n        })]\n      }), _jsx(View, {\n        alignSelf: \"center\",\n        children: icon && _jsx(Avatar, {\n          rounded: true,\n          size: \"xlarge\",\n          title: user.name,\n          source: {\n            uri: icon\n          },\n          onPress: pickImage,\n          activeOpacity: 0.7,\n          children: _jsx(Avatar.Accessory, {\n            size: 50\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center'\n  },\n  actionBar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    padding: 12\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 120,\n    padding: 12,\n    borderRadius: 50,\n    backgroundColor: 'rgb(29, 161, 242)'\n  },\n  tweetButtonText: {\n    color: '#ffffff'\n  },\n  input: {\n    height: 400,\n    backgroundColor: '#f8f8f8',\n    padding: 12\n  }\n});\nexport { ProfileScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/ProfileScreen.js"],"names":["React","useState","useCallback","useEffect","Avatar","Button","NativeBaseProvider","useNavigation","Constants","ImagePicker","Permissions","signOut","doc","setDoc","getDoc","updateDoc","ref","uploadBytes","getDownloadURL","auth","firestore","storage","LoadingScreen","ProfileScreen","navigation","user","setUser","icon","setIcon","iconLocked","setIconLocked","loading","setLoading","userRef","currentUser","uid","snapShot","data","imgURL","name","unLock","handleLogout","then","console","log","catch","error","message","pickImage","platform","ios","askAsync","CAMERA","status","alert","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","updateIcon","uri","url","iconRef","fetch","localUri","blob","localBlob","metadata","snapshot","userIconRef","imgUrl","capital","setTimeout","updateProfile","birth","Date","styles","root","actionBar","button","StyleSheet","create","flex","display","alignContent","flexDirection","justifyContent","padding","alignItems","width","borderRadius","backgroundColor","tweetButtonText","color","input","height"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Image } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { Button, NativeBaseProvider } from 'native-base'; \r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Constants from 'expo-constants';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { signOut } from 'firebase/auth';\r\nimport { doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n\r\nimport { auth, firestore, storage } from '../../firebase';\r\nimport { LoadingScreen } from './LoadingScreen';\r\n\r\nconst ProfileScreen = () => {\r\n  \r\n  const navigation = useNavigation();\r\n  const [user, setUser] = useState();\r\n  const [icon, setIcon] = useState(null);\r\n  const [iconLocked, setIconLocked] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(async () => {\r\n    // 最初のレンダリング時にアイコンなどを取得\r\n    const userRef = doc(firestore, `users/${auth.currentUser.uid}`);\r\n    const snapShot = await getDoc(userRef);\r\n    if(snapShot.data().imgURL != ''){\r\n      setIcon(snapShot.data().imgURL);\r\n    }\r\n    setUser({\r\n      name: snapShot.data().name,\r\n      imgURL: snapShot.data().imgURL,\r\n    });\r\n    setLoading(false);\r\n  },[]);\r\n\r\n  const unLock = useCallback(() => setIconLocked(false), []);\r\n\r\n  const handleLogout = () => {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('logout');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  const pickImage = async () => {\r\n\r\n    if(iconLocked){\r\n      return;\r\n    }\r\n\r\n    if (Constants.platform.ios) {\r\n      const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n      if (status !== 'granted') {\r\n          alert(\"利用には許可が必要です。\");\r\n          return;\r\n      }\r\n    }\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      // allowsEditing: true,\r\n      // aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      updateIcon(result.uri);\r\n    }\r\n  };\r\n\r\n  const updateIcon = async (url) => {\r\n\r\n    const iconRef = ref(storage, `images/${auth.currentUser.uid}/icon`);\r\n    const localUri = await fetch(url);\r\n    const localBlob = await localUri.blob();\r\n\r\n    const metadata = {\r\n      name : 'icon',\r\n    };\r\n\r\n    uploadBytes(iconRef, localBlob, metadata).then(async (snapshot) => {\r\n      const userIconRef = doc(firestore, `users/${auth.currentUser.uid}`);\r\n      const imgUrl = await getDownloadURL(ref(storage, `images/${auth.currentUser.uid}/icon`));\r\n      updateDoc(userIconRef, {\r\n        imgURL : imgUrl,\r\n      }, { capital: true });\r\n      setIcon(url);\r\n      setIconLocked(true);\r\n      setTimeout(unLock, 300000); // 五分間アイコンを変更不可に\r\n    });\r\n  };\r\n\r\n  const updateProfile = () => {\r\n    const userRef = doc(firestore, `users/${auth.currentUser.uid}`);\r\n    updateDoc(userRef, {\r\n      birth : new Date(),\r\n    },{ capital: true });\r\n    console.log(\"update\");\r\n  };\r\n\r\n  if(loading){\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <View style={styles.root}>\r\n        <View style={styles.actionBar}>\r\n          <Text>{auth.currentUser.uid}</Text>\r\n          <Button style={styles.button} onPress={handleLogout}>ログアウト</Button>\r\n        </View>\r\n        <View alignSelf=\"center\">\r\n          {icon && <Avatar rounded size=\"xlarge\" title={user.name} source={{ uri : icon }} onPress={pickImage}  activeOpacity={0.7}><Avatar.Accessory size={50} /></Avatar>}\r\n          {/* {!icon && <Avatar icon={{name: 'user', type: 'font-awesome'}} source={{ uri : icon }} key={icon} />} */}\r\n        </View>\r\n      </View>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n  },\r\n  actionBar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: 12,\r\n  },\r\n  button: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 120,\r\n    padding: 12,\r\n    borderRadius: 50,\r\n    backgroundColor: 'rgb(29, 161, 242)',\r\n  },\r\n  tweetButtonText: {\r\n    color: '#ffffff',\r\n  },\r\n  input: {\r\n    height: 400,\r\n    backgroundColor: '#f8f8f8',\r\n    padding: 12,\r\n  },\r\n})\r\n\r\nexport {ProfileScreen};\r\n"]},"metadata":{},"sourceType":"module"}