{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { doc, setDoc, getDoc, getDocs, updateDoc, collection, query, where, limit } from 'firebase/firestore';\nimport { auth, firestore, storage } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatTabScreen = function ChatTabScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  useEffect(function () {\n    return getChatList();\n  }, []);\n\n  var getChatList = function getChatList() {\n    var matchingRef, matchingSnap, matchingList, chatNameList, matchingUserRef, matchingUserSnap, userList;\n    return _regeneratorRuntime.async(function getChatList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            matchingRef = collection(firestore, \"matching/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDocs(matchingRef));\n\n          case 3:\n            matchingSnap = _context.sent;\n            matchingList = [];\n            chatNameList = [];\n            matchingSnap.docs.forEach(function (doc) {\n              matchingList.push(doc.id);\n              chatNameList.push(doc.data().chatName);\n            });\n            matchingUserRef = collection(firestore, \"users\");\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(getDocs(matchingUserRef));\n\n          case 10:\n            matchingUserSnap = _context.sent;\n            userList = [];\n            matchingUserSnap.docs.forEach(function (doc) {\n              var i = matchingList.indexOf(doc.id);\n\n              if (i != -1) {\n                userList.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n                  chatRoom: chatNameList[i]\n                }));\n              }\n            });\n            setUsers(userList);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.childContainer,\n      children: [_jsx(Search, {}), users.map(function (user, index) {\n        return _jsx(ListItem, {\n          user: user,\n          navigation: navigation\n        }, index);\n      })]\n    })\n  });\n};\n\nvar Search = function Search() {\n  return _jsxs(View, {\n    style: [styles.flexify, {\n      marginHorizontal: 5,\n      marginTop: 10\n    }],\n    children: [_jsx(Input, {\n      placeholder: \"Search messages\",\n      leftIcon: _jsx(Icon, {\n        name: \"search\",\n        size: 24,\n        color: \"gray\"\n      }),\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      }\n    }), _jsx(Icon, {\n      name: \"rowing\",\n      size: 24,\n      color: \"gray\"\n    })]\n  });\n};\n\nvar ListItem = function ListItem(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user;\n  return _jsxs(TouchableOpacity, {\n    style: [styles.flexify, styles.bordered],\n    onPress: function onPress() {\n      navigation.navigate('Chatroom', _objectSpread({}, user));\n    },\n    children: [_jsxs(View, {\n      style: styles.flexify,\n      children: [user.imgURL != \"\" ? _jsx(Avatar, {\n        rounded: true,\n        source: {\n          uri: user.imgURL\n        },\n        activeOpacity: 0.7\n      }) : _jsx(Avatar, {\n        rounded: true,\n        icon: {\n          name: 'user',\n          color: 'white',\n          type: 'font-awesome'\n        },\n        containerStyle: {\n          backgroundColor: \"gray\"\n        },\n        activeOpacity: 0.7\n      }), _jsxs(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: [_jsx(Text, {\n          h4: true,\n          style: {\n            fontWeight: \"600\"\n          },\n          children: user.name\n        }), _jsx(Text, {\n          children: \"Nice to meet you too!\"\n        })]\n      })]\n    }), _jsx(Text, {\n      children: \"Nov 12\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  headerWrapper: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    paddingVertical: 15,\n    backgroundColor: 'white'\n  },\n  childContainer: {\n    paddingTop: StatusBar.currentHeight,\n    paddingHorizontal: 20,\n    width: '90%',\n    marginVertical: 0,\n    marginHorizontal: 'auto'\n  },\n  flexify: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  bordered: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#f5f5f5',\n    paddingVertical: 10\n  }\n});\nexport { ChatTabScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/ChatTabScreen.js"],"names":["React","useState","useEffect","useReducer","Avatar","Input","Overlay","Icon","useNavigation","MaterialIcons","doc","setDoc","getDoc","getDocs","updateDoc","collection","query","where","limit","auth","firestore","storage","ChatTabScreen","navigation","users","setUsers","index","setIndex","getChatList","matchingRef","currentUser","uid","matchingSnap","matchingList","chatNameList","docs","forEach","push","id","data","chatName","matchingUserRef","matchingUserSnap","userList","i","indexOf","chatRoom","styles","container","childContainer","map","user","Search","flexify","marginHorizontal","marginTop","borderBottomWidth","ListItem","bordered","navigate","imgURL","uri","name","color","type","backgroundColor","marginLeft","fontWeight","StyleSheet","create","flex","headerWrapper","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","paddingVertical","paddingTop","StatusBar","currentHeight","paddingHorizontal","marginVertical","flexDirection","alignItems","justifyContent","borderTopWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport { Avatar, Input, Overlay, Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { MaterialIcons  } from '@expo/vector-icons';\r\nimport { doc, setDoc, getDoc, getDocs, updateDoc, collection, query, where, limit } from 'firebase/firestore';\r\n\r\nimport { auth, firestore, storage } from '../../firebase';\r\n\r\n\r\nconst ChatTabScreen = () => {\r\n\r\n  const navigation = useNavigation();\r\n  const [users, setUsers] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  \r\n  useEffect(() => getChatList(), []);\r\n\r\n  const getChatList = async () => {\r\n\r\n    // マッチングしたユーザのuid取得\r\n    const matchingRef = collection(firestore, `matching/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n    const matchingSnap = await getDocs(matchingRef);\r\n    let matchingList = [];\r\n    let chatNameList = [];\r\n    matchingSnap.docs.forEach((doc) => {\r\n      matchingList.push(doc.id);\r\n      chatNameList.push(doc.data().chatName);\r\n    });\r\n\r\n    // とりあえずユーザ全員取得\r\n    // 後で10件ずつ検索してこれるように変更\r\n    const matchingUserRef = collection(firestore, `users`);\r\n    const matchingUserSnap = await getDocs(matchingUserRef);\r\n    let userList = [];\r\n    matchingUserSnap.docs.forEach((doc) => {\r\n\r\n      // マッチした人がいるか検索\r\n      const i = matchingList.indexOf(doc.id);\r\n      // いたらユーザリストに追加\r\n      if(i != -1){\r\n        userList.push(\r\n          {\r\n            ...doc.data(),\r\n            chatRoom : chatNameList[i],\r\n          }\r\n        );\r\n      }\r\n    });\r\n    setUsers(userList);\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.childContainer}>\r\n        <Search />\r\n        {users.map((user, index) => (\r\n          <ListItem key={index} user={user} navigation={navigation} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst Search = () => (\r\n  <View\r\n    style={[styles.flexify, { marginHorizontal: 5, marginTop: 10 }]}\r\n  >\r\n    <Input\r\n      placeholder=\"Search messages\"\r\n      leftIcon={<Icon name=\"search\" size={24} color=\"gray\" />}\r\n      inputContainerStyle={{ borderBottomWidth: 0 }}\r\n      // onChangeText={}\r\n    />\r\n\r\n    <Icon name=\"rowing\" size={24} color=\"gray\" />\r\n  </View>\r\n)\r\n\r\nconst ListItem = ({ navigation, user }) => (\r\n  <TouchableOpacity\r\n    style={[styles.flexify, styles.bordered]}\r\n    onPress={() => {navigation.navigate('Chatroom', {...user})}}\r\n  >\r\n    <View style={styles.flexify}>\r\n      {user.imgURL != \"\" \r\n        ? <Avatar rounded source={{uri: user.imgURL}} activeOpacity={0.7} />\r\n        : <Avatar rounded icon={{name: 'user', color: 'white', type: 'font-awesome'}} containerStyle={{backgroundColor: \"gray\"}} activeOpacity={0.7} />\r\n      }\r\n      <View style={{ marginLeft: 10 }}>\r\n        <Text h4 style={{ fontWeight: \"600\" }}>\r\n          {user.name}\r\n        </Text>\r\n        <Text>Nice to meet you too!</Text>\r\n      </View>\r\n    </View>\r\n\r\n    <Text>Nov 12</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5'\r\n  },\r\n  headerWrapper: {\r\n    shadowColor: '#171717',\r\n    shadowOffset:{\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 3,\r\n    paddingVertical: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n  childContainer: {\r\n    paddingTop: StatusBar.currentHeight,\r\n    paddingHorizontal: 20,\r\n    width: '90%',\r\n    marginVertical: 0,\r\n    marginHorizontal: 'auto',\r\n  },\r\n  flexify: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  bordered: {\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f5f5f5',\r\n    paddingVertical: 10,\r\n  },\r\n})\r\n\r\nexport { ChatTabScreen };"]},"metadata":{},"sourceType":"module"}