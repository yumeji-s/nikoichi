{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Deck } from \"../components/SwipeCard\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getDocs, collection, query, where, limit } from 'firebase/firestore';\nimport { auth, firestore } from \"../../firebase\";\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SwipeScreen = function SwipeScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function _callee() {\n    var requestRef, requestUsersSnap, uids, usersRef, userQuery, usersSnap, users;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestRef = collection(firestore, \"request/\" + auth.currentUser.uid + \"/\" + auth.currentUser.uid);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDocs(requestRef));\n\n          case 3:\n            requestUsersSnap = _context.sent;\n            uids = [];\n            requestUsersSnap.docs.forEach(function (doc) {\n              uids.push(doc.id);\n            });\n            usersRef = collection(firestore, \"users/\");\n            userQuery = query(usersRef, limit(30));\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(getDocs(userQuery));\n\n          case 10:\n            usersSnap = _context.sent;\n            users = [];\n            usersSnap.docs.forEach(function (doc) {\n              if (!uids.includes(doc.id)) {\n                users.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n                  uri: doc.data().imgURL == '' ? null : doc.data().imgURL\n                }));\n              }\n            });\n            setData(users);\n            setLoading(false);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  if (loading) {\n    return _jsx(LoadingScreen, {});\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Deck, {\n      data: data\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 40,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  }\n});\nexport { SwipeScreen };","map":{"version":3,"sources":["C:/Users/yumej/github/nikoichi/src/screens/SwipeScreen.js"],"names":["Deck","React","useState","useEffect","getDocs","collection","query","where","limit","auth","firestore","LoadingScreen","SwipeScreen","data","setData","loading","setLoading","requestRef","currentUser","uid","requestUsersSnap","uids","docs","forEach","doc","push","id","usersRef","userQuery","usersSnap","users","includes","uri","imgURL","styles","container","StyleSheet","create","flex","marginTop","backgroundColor","alignItems"],"mappings":";;;;;;;;AAAA,SAAQA,IAAR;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAKA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,KAA5C,QAAyD,oBAAzD;AAEA,SAASC,IAAT,EAAeC,SAAf;AACA,SAASC,aAAT;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExB,kBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BZ,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AAEAb,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFc,YAAAA,UAFE,GAEWZ,UAAU,CAACK,SAAD,eAAuBD,IAAI,CAACS,WAAL,CAAiBC,GAAxC,SAA+CV,IAAI,CAACS,WAAL,CAAiBC,GAAhE,CAFrB;AAAA;AAAA,6CAGuBf,OAAO,CAACa,UAAD,CAH9B;;AAAA;AAGFG,YAAAA,gBAHE;AAIJC,YAAAA,IAJI,GAIG,EAJH;AAKRD,YAAAA,gBAAgB,CAACE,IAAjB,CAAsBC,OAAtB,CAA8B,UAACC,GAAD,EAAS;AACrCH,cAAAA,IAAI,CAACI,IAAL,CAAUD,GAAG,CAACE,EAAd;AACD,aAFD;AAKMC,YAAAA,QAVE,GAUStB,UAAU,CAACK,SAAD,WAVnB;AAWFkB,YAAAA,SAXE,GAWUtB,KAAK,CAACqB,QAAD,EAAWnB,KAAK,CAAC,EAAD,CAAhB,CAXf;AAAA;AAAA,6CAYgBJ,OAAO,CAACwB,SAAD,CAZvB;;AAAA;AAYFC,YAAAA,SAZE;AAaJC,YAAAA,KAbI,GAaI,EAbJ;AAcRD,YAAAA,SAAS,CAACP,IAAV,CAAeC,OAAf,CAAuB,UAACC,GAAD,EAAS;AAC9B,kBAAG,CAACH,IAAI,CAACU,QAAL,CAAcP,GAAG,CAACE,EAAlB,CAAJ,EAA0B;AACxBI,gBAAAA,KAAK,CAACL,IAAN,iCAEOD,GAAG,CAACX,IAAJ,EAFP;AAGImB,kBAAAA,GAAG,EAAGR,GAAG,CAACX,IAAJ,GAAWoB,MAAX,IAAqB,EAArB,GAA0B,IAA1B,GAAiCT,GAAG,CAACX,IAAJ,GAAWoB;AAHtD;AAMD;AACF,aATD;AAUAnB,YAAAA,OAAO,CAACgB,KAAD,CAAP;AACAd,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAzBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EA0BP,EA1BO,CAAT;;AA4BA,MAAGD,OAAH,EAAW;AACT,WAAO,KAAC,aAAD,KAAP;AACD;;AAED,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,IAAI,EAAEtB;AAAZ;AADF,IADF;AAKD,CA1CD;;AA4CA,IAAMqB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAE,EAFF;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE;AAJH;AADkB,CAAlB,CAAf;AAUA,SAAQ7B,WAAR","sourcesContent":["import {Deck} from '../components/SwipeCard';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { getDocs, collection, query, where, limit } from 'firebase/firestore';\r\n\r\nimport { auth, firestore } from '../../firebase';\r\nimport { LoadingScreen } from './LoadingScreen';\r\n\r\n\r\nconst SwipeScreen = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(async () => {\r\n    // 自分、リクエストをくれた人、マッチングした人のuidを取得\r\n    const requestRef = collection(firestore, `request/${auth.currentUser.uid}/${auth.currentUser.uid}`);\r\n    const requestUsersSnap = await getDocs(requestRef);\r\n    let uids = [];\r\n    requestUsersSnap.docs.forEach((doc) => {\r\n      uids.push(doc.id);\r\n    });\r\n\r\n    // 最大30件取得して非表示ユーザ以外をセット\r\n    const usersRef = collection(firestore, `users/`);\r\n    const userQuery = query(usersRef, limit(30));\r\n    const usersSnap = await getDocs(userQuery);\r\n    let users = [];\r\n    usersSnap.docs.forEach((doc) => {\r\n      if(!uids.includes(doc.id)){\r\n        users.push(\r\n          {\r\n            ...doc.data(),\r\n            uri : doc.data().imgURL == '' ? null : doc.data().imgURL,\r\n          }\r\n        );\r\n      }\r\n    });    \r\n    setData(users);\r\n    setLoading(false);\r\n  },[]);\r\n\r\n  if(loading){\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Deck data={data} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      marginTop: 40,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n});\r\n\r\n\r\nexport {SwipeScreen};"]},"metadata":{},"sourceType":"module"}