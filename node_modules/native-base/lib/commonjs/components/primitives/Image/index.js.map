{"version":3,"sources":["index.tsx"],"names":["StyledImage","RNImage","Image","props","ref","source","src","fallbackElement","alt","fallbackSource","ignoreFallback","_alt","resolvedProps","finalSource","getSource","current","uri","renderedSource","setSource","alternate","setAlternate","fallbackSourceFlag","setfallbackSourceFlag","React","useEffect","onImageLoadError","event","onError","console","warn","nativeEvent","error","isValidElement"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA,MAAMA,WAAW,GAAG,iCAAoBC,kBAApB,CAApB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAqBC,GAArB,KAAkC;AAC9C,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,GAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,GAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,cANI;AAOJC,IAAAA,IAPI;AAQJ,OAAGC;AARC,MASF,uCAAmB,OAAnB,EAA4BT,KAA5B,CATJ;AAWA,QAAMU,WAAgB,GAAG,mBAAO,IAAP,CAAzB;AACA,QAAMC,SAAS,GAAG,wBAAY,MAAM;AAClC,QAAIT,MAAJ,EAAY;AACVQ,MAAAA,WAAW,CAACE,OAAZ,GAAsBV,MAAtB;AACD,KAFD,MAEO,IAAIC,GAAJ,EAAS;AACdO,MAAAA,WAAW,CAACE,OAAZ,GAAsB;AAAEC,QAAAA,GAAG,EAAEV;AAAP,OAAtB;AACD;;AACD,WAAOO,WAAW,CAACE,OAAnB;AACD,GAPiB,EAOf,CAACV,MAAD,EAASC,GAAT,CAPe,CAAlB;AASA,QAAM,CAACW,cAAD,EAAiBC,SAAjB,IAA8B,qBAASJ,SAAS,EAAlB,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4B,qBAAS,KAAT,CAAlC;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8C,qBAAS,IAAT,CAApD;;AAEAC,iBAAMC,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACXX,MAAAA,WAAW,CAACE,OAAZ,GAAsB,IAAtB;AACD,KAFD;AAGD,GAJD,EAIG,CAACV,MAAD,EAASC,GAAT,EAAcQ,SAAd,CAJH;;AAMA,QAAMW,gBAAgB,GAAG,wBACtBC,KAAD,IAAgB;AACdvB,IAAAA,KAAK,CAACwB,OAAN,IAAiBxB,KAAK,CAACwB,OAAN,CAAcD,KAAd,CAAjB;AACAE,IAAAA,OAAO,CAACC,IAAR,CAAaH,KAAK,CAACI,WAAN,CAAkBC,KAA/B;;AACA,QACE,CAACrB,cAAD,IACAD,cADA,IAEAA,cAAc,KAAKQ,cAFnB,IAGAI,kBAJF,EAKE;AACAC,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAJ,MAAAA,SAAS,CAACT,cAAD,CAAT;AACD,KARD,MAQO;AACLW,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAfsB,EAgBvB,CAACX,cAAD,EAAiBY,kBAAjB,EAAqCX,cAArC,EAAqDP,KAArD,EAA4Dc,cAA5D,CAhBuB,CAAzB,CAhC8C,CAkD9C;;AACA,MAAI,kDAAsBd,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,MAAI,CAACK,GAAL,EAAU;AACRoB,IAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACD;;AAED,MAAIV,SAAJ,EAAe;AACb,QAAIZ,eAAJ,EAAqB;AACnB,wBAAIgB,eAAMS,cAAN,CAAqBzB,eAArB,CAAJ,EAA2C;AACzC,eAAOA,eAAP;AACD;AACF,KAJD,MAIO,oBAAO,6BAAC,aAAD,EAAUI,IAAV,EAAiBH,GAAjB,CAAP;AACR;;AACD,sBACE,6BAAC,WAAD;AACE,IAAA,MAAM,EAAES,cADV;AAEE,IAAA,kBAAkB,EAAET,GAFtB;AAGE,IAAA,GAAG,EAAEA;AAHP,KAIMI,aAJN;AAKE,IAAA,OAAO,EAAEa,gBALX;AAME,IAAA,GAAG,EAAErB;AANP,KADF;AAUD,CA3ED;;4BA6Ee,+BAAK,uBAAWF,KAAX,CAAL,C","sourcesContent":["import React, { useState, memo, forwardRef, useCallback, useRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\n\nconst StyledImage = makeStyledComponent(RNImage);\n\nconst Image = (props: IImageProps, ref: any) => {\n  const {\n    source,\n    src,\n    fallbackElement,\n    alt,\n    fallbackSource,\n    ignoreFallback,\n    _alt,\n    ...resolvedProps\n  } = usePropsResolution('Image', props);\n\n  const finalSource: any = useRef(null);\n  const getSource = useCallback(() => {\n    if (source) {\n      finalSource.current = source;\n    } else if (src) {\n      finalSource.current = { uri: src };\n    }\n    return finalSource.current;\n  }, [source, src]);\n\n  const [renderedSource, setSource] = useState(getSource());\n  const [alternate, setAlternate] = useState(false);\n  const [fallbackSourceFlag, setfallbackSourceFlag] = useState(true);\n\n  React.useEffect(() => {\n    return () => {\n      finalSource.current = null;\n    };\n  }, [source, src, getSource]);\n\n  const onImageLoadError = useCallback(\n    (event: any) => {\n      props.onError && props.onError(event);\n      console.warn(event.nativeEvent.error);\n      if (\n        !ignoreFallback &&\n        fallbackSource &&\n        fallbackSource !== renderedSource &&\n        fallbackSourceFlag\n      ) {\n        setfallbackSourceFlag(false);\n        setSource(fallbackSource);\n      } else {\n        setAlternate(true);\n      }\n    },\n    [fallbackSource, fallbackSourceFlag, ignoreFallback, props, renderedSource]\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    if (fallbackElement) {\n      if (React.isValidElement(fallbackElement)) {\n        return fallbackElement;\n      }\n    } else return <Text {..._alt}>{alt}</Text>;\n  }\n  return (\n    <StyledImage\n      source={renderedSource}\n      accessibilityLabel={alt}\n      alt={alt}\n      {...resolvedProps}\n      onError={onImageLoadError}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Image));\nexport type { IImageProps };\n"]}