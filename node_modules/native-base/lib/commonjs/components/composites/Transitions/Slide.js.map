{"version":3,"sources":["Slide.tsx"],"names":["holderStyle","top","right","left","bottom","Slide","children","props","ref","in","visible","placement","duration","containerOpacity","setContainerOpacity","React","useState","size","setSize","provideSize","layoutSize","width","height","transition","animationStyle","initial","translateY","animate","exit","translateX","position","e","nativeEvent","layout","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport type { ISlideProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst holderStyle: any = {\n  top: {\n    top: 0,\n    right: 0,\n    left: 0,\n  },\n  right: {\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n  },\n};\n\nconst Slide = ({ children, ...props }: ISlideProps, ref: any) => {\n  const { in: visible, placement, duration } = useThemeProps('Slide', props);\n  const [containerOpacity, setContainerOpacity] = React.useState(0);\n  const [size, setSize] = React.useState(0);\n  const provideSize = (layoutSize: any) => {\n    if (placement === 'right' || placement === 'left')\n      setSize(layoutSize.width);\n    else setSize(layoutSize.height);\n    setContainerOpacity(1);\n  };\n\n  const transition = { duration };\n\n  const animationStyle: any = {\n    top: {\n      initial: {\n        translateY: -size,\n      },\n      animate: {\n        translateY: 0,\n        transition,\n      },\n    },\n    bottom: {\n      initial: {\n        translateY: size,\n      },\n      animate: {\n        translateY: 0,\n        transition,\n      },\n      exit: {\n        translateY: size,\n        transition,\n      },\n    },\n    left: {\n      initial: {\n        translateX: -size,\n      },\n      animate: {\n        translateX: 0,\n        transition,\n      },\n    },\n    right: {\n      initial: {\n        translateX: size,\n      },\n      animate: {\n        translateX: 0,\n        transition,\n      },\n    },\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      w=\"100%\"\n      h=\"100%\"\n      position=\"absolute\"\n      pointerEvents=\"box-none\"\n      overflow=\"hidden\"\n    >\n      <PresenceTransition\n        visible={visible}\n        {...animationStyle[placement]}\n        style={[\n          { position: 'absolute' },\n          holderStyle[placement],\n          { height: '100%' },\n        ]}\n      >\n        <Box\n          {...props}\n          h=\"100%\"\n          opacity={containerOpacity}\n          pointerEvents=\"box-none\"\n          ref={ref}\n          onLayout={(e) => provideSize(e.nativeEvent.layout)}\n        >\n          {children}\n        </Box>\n      </PresenceTransition>\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Slide));\n"]}