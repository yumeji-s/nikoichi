{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["useStyledSystemPropsResolver","style","propStyle","debug","props","theme","currentBreakpoint","config","strictMode","restProps","React","useMemo","styleSheet","box","process","env","NODE_ENV","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,4BAA4B,GAAG,CAAC;AAC3CC,EAAAA,KAAK,EAAEC,SADoC;AAE3CC,EAAAA,KAF2C;AAG3C,KAAGC;AAHwC,CAAD,KAIjC;AACT,QAAMC,KAAK,GAAG,yBAAd;AACA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAgC,4CACpC,qBADoC,CAAtC;AAGA,QAAMC,UAAU,GAAGD,MAAM,CAACC,UAA1B;;AAEA,QAAM;AAAEP,IAAAA,KAAF;AAASQ,IAAAA;AAAT,MAAuBC,eAAMC,OAAN,CAAc,MAAM;AAC/C,UAAM;AAAEC,MAAAA,UAAF;AAAcH,MAAAA;AAAd,QAA4B,4CAAyB,EACzD,GAAGL,KADsD;AAEzDC,MAAAA,KAFyD;AAGzDF,MAAAA,KAHyD;AAIzDG,MAAAA,iBAJyD;AAKzDE,MAAAA;AALyD,KAAzB,CAAlC;;AAOA,QAAIN,SAAJ,EAAe;AACb,aAAO;AAAED,QAAAA,KAAK,EAAE,CAACW,UAAU,CAACC,GAAZ,EAAiBX,SAAjB,CAAT;AAAsCO,QAAAA;AAAtC,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAER,QAAAA,KAAK,EAAEW,UAAU,CAACC,GAApB;AAAyBJ,QAAAA;AAAzB,OAAP;AACD;AACF,GAb4B,EAa1B,CAACL,KAAD,EAAQC,KAAR,EAAeF,KAAf,EAAsBG,iBAAtB,EAAyCE,UAAzC,EAAqDN,SAArD,CAb0B,CAA7B;;AAcA,MAAIY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0Cb,KAA9C,EAAqD;AACnD;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,iBAA9B;AACD;;AAED,SAAO,CAACL,KAAD,EAAQQ,SAAR,CAAP;AACD,CA/BM","sourcesContent":["import { getStyleAndFilteredProps } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { style, restProps } = React.useMemo(() => {\n    const { styleSheet, restProps } = getStyleAndFilteredProps({\n      ...props,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], restProps };\n    } else {\n      return { style: styleSheet.box, restProps };\n    }\n  }, [props, theme, debug, currentBreakpoint, strictMode, propStyle]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  return [style, restProps];\n};\n"]}