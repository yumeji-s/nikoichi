{"version":3,"sources":["styled-system.ts"],"names":["Platform","StyleSheet","get","has","resolveValueWithBreakpoint","transparentize","strictModeLogger","isNumber","n","isNaN","getColor","rawValue","scale","theme","alphaMatched","match","colorMatched","color","alphaValue","split","alphaFromToken","opacity","alpha","parseFloat","newColor","getMargin","convertStringNumberToNumber","isNegative","absolute","Math","abs","value","layout","width","property","w","height","h","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","size","properties","boxSize","overflow","overflowX","overflowY","display","verticalAlign","textAlign","flexbox","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flexDir","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","position","zIndex","top","right","bottom","left","transformer","tintColor","backgroundColor","bg","bgColor","background","textDecorationColor","border","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderTopRadius","borderLeftRadius","borderRightRadius","borderTopLeftRadius","borderTopRightRadius","borderRight","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderX","borderY","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","rounded","roundedTopLeft","roundedTopRight","roundedBottomLeft","roundedBottomRight","roundedTop","borderBottomRadius","roundedBottom","roundedLeft","roundedRight","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundBlendMode","bgImage","bgImg","bgBlendMode","bgSize","bgPosition","bgPos","bgRepeat","bgAttachment","space","margin","m","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","marginX","mx","marginY","my","padding","p","paddingTop","pt","paddingRight","pr","paddingBottom","pb","paddingLeft","pl","paddingX","px","paddingY","py","typography","fontFamily","fontSize","fontWeight","val","toString","lineHeight","letterSpacing","fontStyle","wordBreak","overflowWrap","textOverflow","textTransform","whiteSpace","textDecoration","txtDecor","textDecorationLine","extraProps","outline","outlineWidth","shadow","cursor","propConfig","key","Number","getStyleAndFilteredProps","style","debug","currentBreakpoint","strictMode","props","styleFromProps","restProps","breakpoints","config","strictModeProps","token","mode","type","endsWith","OS","fontSizes","forEach","process","env","NODE_ENV","console","log","styleSheet","create","box"],"mappings":"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","sourcesContent":["import { Platform, StyleSheet } from 'react-native';\nimport get from 'lodash.get';\nimport has from 'lodash.has';\nimport { resolveValueWithBreakpoint } from '../hooks/useThemeProps/utils';\nimport { transparentize } from './tools';\nimport { strictModeLogger } from '../core/StrictMode';\n\nconst isNumber = (n: any) => typeof n === 'number' && !isNaN(n);\n\nexport const getColor = (rawValue: any, scale: any, theme: any) => {\n  const alphaMatched =\n    typeof rawValue === 'string' ? rawValue?.match(/:alpha\\.\\d\\d?\\d?/) : false;\n\n  if (alphaMatched) {\n    const colorMatched = rawValue?.match(/^.*?(?=:alpha)/);\n    const color = colorMatched ? colorMatched[0] : colorMatched;\n    const alphaValue = alphaMatched[0].split('.')[1];\n    const alphaFromToken = get(theme.opacity, alphaValue, alphaValue);\n    const alpha = alphaFromToken ? parseFloat(alphaFromToken) : 1;\n    const newColor = transparentize(color, alpha)(theme);\n    return newColor;\n  } else {\n    return get(scale, rawValue, rawValue);\n  }\n};\n\n// To handle negative margins\nconst getMargin = (n: any, scale: any) => {\n  n = convertStringNumberToNumber('margin', n);\n  if (!isNumber(n)) {\n    return get(scale, n, n);\n  }\n\n  const isNegative = n < 0;\n  const absolute = Math.abs(n);\n  const value = get(scale, absolute, absolute);\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n  return value * (isNegative ? -1 : 1);\n};\n\nexport const layout = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  w: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  textAlign: true,\n} as const;\n\nexport const flexbox = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flexDir: {\n    property: 'flexDirection',\n  },\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n} as const;\n\nexport const position = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n  },\n  top: {\n    property: 'top',\n    scale: 'space',\n  },\n  right: {\n    property: 'right',\n    scale: 'space',\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space',\n  },\n  left: {\n    property: 'left',\n    scale: 'space',\n  },\n} as const;\n\nexport const color = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  tintColor: {\n    property: 'tintColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  opacity: {\n    property: 'opacity',\n    scale: 'opacity',\n  },\n  bg: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  bgColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  background: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  textDecorationColor: {\n    property: 'textDecorationColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n} as const;\n\nexport const border = {\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths',\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles',\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders',\n  },\n  borderTopRadius: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii',\n  },\n  borderLeftRadius: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii',\n  },\n  borderRightRadius: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders',\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders',\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders',\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders',\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders',\n  },\n  borderTopWidth: {\n    property: 'borderTopWidth',\n    scale: 'borderWidths',\n  },\n  borderTopColor: {\n    property: 'borderTopColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderTopStyle: {\n    property: 'borderTopStyle',\n    scale: 'borderStyles',\n  },\n  borderBottomWidth: {\n    property: 'borderBottomWidth',\n    scale: 'borderWidths',\n  },\n  borderBottomColor: {\n    property: 'borderBottomColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderBottomStyle: {\n    property: 'borderBottomStyle',\n    scale: 'borderStyles',\n  },\n  borderLeftWidth: {\n    property: 'borderLeftWidth',\n    scale: 'borderWidths',\n  },\n  borderLeftColor: {\n    property: 'borderLeftColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderLeftStyle: {\n    property: 'borderLeftStyle',\n    scale: 'borderStyles',\n  },\n  borderRightWidth: {\n    property: 'borderRightWidth',\n    scale: 'borderWidths',\n  },\n  borderRightColor: {\n    property: 'borderRightColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderRightStyle: {\n    property: 'borderRightStyle',\n    scale: 'borderStyles',\n  },\n  rounded: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n\n  roundedTopLeft: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n\n  roundedTopRight: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n\n  roundedBottomLeft: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n\n  roundedBottomRight: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n\n  roundedTop: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii',\n  },\n  borderBottomRadius: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n  roundedBottom: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n\n  roundedLeft: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii',\n  },\n\n  roundedRight: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n} as const;\n\nexport const background = {\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: {\n    property: 'backgroundImage',\n  },\n  bgImg: {\n    property: 'backgroundImage',\n  },\n  bgBlendMode: {\n    property: 'backgroundBlendMode',\n  },\n  bgSize: {\n    property: 'backgroundSize',\n  },\n  bgPosition: {\n    property: 'backgroundPosition',\n  },\n  bgPos: {\n    property: 'backgroundPosition',\n  },\n  bgRepeat: {\n    property: 'backgroundRepeat',\n  },\n  bgAttachment: {\n    property: 'backgroundAttachment',\n  },\n} as const;\n\nexport const space = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  m: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mt: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mr: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mb: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  ml: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mx: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  my: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n\n  padding: {\n    property: 'padding',\n    scale: 'space',\n  },\n  p: {\n    property: 'padding',\n    scale: 'space',\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space',\n  },\n  pt: {\n    property: 'paddingTop',\n    scale: 'space',\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space',\n  },\n  pr: {\n    property: 'paddingRight',\n    scale: 'space',\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space',\n  },\n  pb: {\n    property: 'paddingBottom',\n    scale: 'space',\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space',\n  },\n  pl: {\n    property: 'paddingLeft',\n    scale: 'space',\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n  },\n  px: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n  },\n  py: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n  },\n} as const;\n\nexport const typography = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts',\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes',\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n    transformer: (val: any, scale: any) => {\n      return val ? get(scale, val, val).toString() : val;\n    },\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights',\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings',\n  },\n  textAlign: true,\n  fontStyle: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  textDecoration: { property: 'textDecorationLine' },\n  txtDecor: { property: 'textDecorationLine' },\n  textDecorationLine: true,\n} as const;\n\nconst extraProps = {\n  outline: true,\n  outlineWidth: true,\n  shadow: {\n    scale: 'shadows',\n  },\n  cursor: true,\n  overflow: true,\n} as const;\n\nconst propConfig = {\n  ...color,\n  ...space,\n  ...layout,\n  ...flexbox,\n  ...border,\n  ...position,\n  ...typography,\n  ...background,\n  ...extraProps,\n} as const;\n\n// For backward compatibility with 3.0 of props like non token string numbers `<Box mt={\"39\"} />` => used to get applied as 39px. RN expects fontWeight to be string and crashes with numbers\n// https://reactnative.dev/docs/text-style-props#fontweight\nconst convertStringNumberToNumber = (key: string, value: string) => {\n  if (\n    typeof value === 'string' &&\n    key !== 'fontWeight' &&\n    value &&\n    !isNaN(Number(value))\n  ) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nexport const getStyleAndFilteredProps = ({\n  style,\n  theme,\n  debug,\n  currentBreakpoint,\n  strictMode,\n  ...props\n}: any) => {\n  let styleFromProps: any = {};\n  const restProps: any = {};\n  for (const key in props) {\n    const rawValue = props[key];\n\n    if (key in propConfig) {\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n\n      const config = propConfig[key as keyof typeof propConfig];\n\n      if (config === true) {\n        styleFromProps = {\n          ...styleFromProps,\n          [key]: convertStringNumberToNumber(key, value),\n        };\n      } else if (config) {\n        //@ts-ignore\n        const { property, scale, properties, transformer } = config;\n        let val = value;\n        const strictModeProps = {\n          token: value,\n          scale,\n          mode: strictMode,\n          type: 'tokenNotFound' as any,\n        };\n\n        if (transformer) {\n          val = transformer(\n            val,\n            theme[scale],\n            theme,\n            props.fontSize,\n            strictModeProps\n          );\n        } else {\n          // If a token is not found in the theme\n          if (!has(theme[scale], value) && typeof value !== 'undefined') {\n            strictModeLogger(strictModeProps);\n          }\n\n          val = get(theme[scale], value, value);\n        }\n\n        if (typeof val === 'string') {\n          if (val.endsWith('px')) {\n            val = parseFloat(val);\n          } else if (val.endsWith('em') && Platform.OS !== 'web') {\n            const fontSize = resolveValueWithBreakpoint(\n              props.fontSize,\n              theme.breakpoints,\n              currentBreakpoint,\n              key\n            );\n            val =\n              parseFloat(val) *\n              parseFloat(get(theme.fontSizes, fontSize, fontSize));\n          }\n        }\n\n        if (typeof value !== 'string' && typeof value !== 'undefined') {\n          strictModeLogger({\n            ...strictModeProps,\n            type: 'tokenNotString',\n          });\n        }\n\n        val = convertStringNumberToNumber(key, val);\n\n        if (properties) {\n          //@ts-ignore\n          properties.forEach((property) => {\n            styleFromProps = {\n              ...styleFromProps,\n              [property]: val,\n            };\n          });\n        } else if (property) {\n          styleFromProps = {\n            ...styleFromProps,\n            [property]: val,\n          };\n        } else {\n          styleFromProps = {\n            ...styleFromProps,\n            ...val,\n          };\n        }\n      }\n    } else {\n      restProps[key] = rawValue;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style ', debug + ' :: ', styleFromProps, style, props);\n  }\n\n  return {\n    styleSheet: StyleSheet.create({ box: styleFromProps }),\n    restProps,\n  };\n};\n\nexport type StyledPropConfig = typeof propConfig;\n"]}